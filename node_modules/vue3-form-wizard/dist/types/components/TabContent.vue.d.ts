declare namespace _default {
    const name: string;
    namespace props {
        namespace title {
            export const type: StringConstructor;
            const _default: string;
            export { _default as default };
        }
        namespace icon {
            const type_1: StringConstructor;
            export { type_1 as type };
            const _default_1: string;
            export { _default_1 as default };
        }
        namespace lazy {
            const type_2: BooleanConstructor;
            export { type_2 as type };
            const _default_2: boolean;
            export { _default_2 as default };
        }
        namespace beforeChange {
            const type_3: FunctionConstructor;
            export { type_3 as type };
        }
        namespace afterChange {
            const type_4: FunctionConstructor;
            export { type_4 as type };
        }
        namespace route {
            const type_5: (ObjectConstructor | StringConstructor)[];
            export { type_5 as type };
        }
        namespace additionalInfo {
            const type_6: ObjectConstructor;
            export { type_6 as type };
            function _default_3(): void;
            export { _default_3 as default };
        }
    }
    const inject: string[];
    function data(): {
        active: boolean;
        validationError: null;
        checked: boolean;
        tabId: string;
    };
    function data(): {
        active: boolean;
        validationError: null;
        checked: boolean;
        tabId: string;
    };
    namespace computed {
        function shape(): any;
        function shape(): any;
        function color(): any;
        function color(): any;
        function errorColor(): any;
        function errorColor(): any;
    }
    function mounted(): void;
    function mounted(): void;
    function destroyed(): void;
    function destroyed(): void;
}
export default _default;
