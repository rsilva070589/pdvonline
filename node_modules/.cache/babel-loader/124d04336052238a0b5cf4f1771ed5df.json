{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport Progress from '@/components/Progress.vue';\nimport { onMounted, ref, computed } from 'vue';\nimport axios from 'axios';\nimport { useMeta } from '@/composables/use-meta'; // import Filtros from './Filtros.vue'\n\nimport ApexChart from 'vue3-apexcharts';\nimport { indexStore, useUserStore } from '../../store/indexStore';\nimport Filtros from './Filtros.vue';\nexport default {\n  __name: 'Dashboard',\n\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    useMeta({\n      title: 'Multiple Tables'\n    });\n    const code_arr = ref([]);\n    const store = indexStore();\n    const storeLogin = useUserStore();\n    store.relAnual = [];\n    store.anoSelecionado = dataAno(new Date());\n    onMounted(() => {\n      bind_data();\n    });\n\n    const bind_data = async () => {\n      getFormasPgto();\n    };\n\n    store.formasPagamentos = [];\n\n    const getFormasPgto = () => {\n      let data = JSON.stringify({\n        \"SCHEMA\": storeLogin.empresas?.schema\n      });\n      let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: store.baseApiHTTPS + '/GetFormapagamento',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: data\n      };\n      axios.request(config).then(response => {\n        response.data.map(x => {\n          const itens = {\n            ID: x.id,\n            DESCRICAO: x.descricao,\n            PERCENTUAL: x.taxa\n          };\n          store.formasPagamentos.push(itens);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    function getVendas(dataIni, dataFim) {\n      store.itensRelVendas = [];\n      let data = JSON.stringify({\n        \"DATAINI\": '01/01/2024',\n        \"DATAFIM\": dataFim,\n        \"SCHEMA\": 'MERCEARIABRAGATTO'\n      });\n      let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: store.baseApiHTTPS + '/periodovendas',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: data\n      };\n      axios.request(config).then(response => {\n        response.data.filter(f => f.tipo_venda == 'NORMAL').map(x => {\n          const dados = {\n            ID: x.id,\n            MES: dataMes(x.data),\n            ANO: dataAno(x.data),\n            CATGO: x.categoria,\n            PRODUTO: x.cod_produto,\n            NOME: x.nome,\n            QTDE: x.qtde,\n            NOME: x.nome,\n            VALOR: x.valor,\n            CUSTO: x.custo,\n            LUCRO: arredonda(x.lucro, 2),\n            PERC_LUCRO: arredonda(x.perc_lucro, 2),\n            FORMA_PGTO: x.forma_pgto,\n            TIPO_VENDA: x.tipo_venda\n          };\n          store.itensRelVendas.push(dados);\n        });\n        calculaMes();\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    var arredonda = function (numero, casasDecimais) {\n      casasDecimais = typeof casasDecimais !== 'undefined' ? casasDecimais : 0;\n      numero = typeof numero !== 'undefined' ? numero : 0;\n      return +(Math.floor(numero + ('e+' + casasDecimais)) + ('e-' + casasDecimais));\n    };\n\n    function somaValor(array) {\n      var arr = array;\n      var sum = 0;\n\n      for (var i = 0; i < arr.length; i++) {\n        sum += arr[i];\n      }\n\n      return sum;\n    }\n\n    function formataDinheiro(item) {\n      let venda = item;\n\n      if (!!venda && venda.toString().includes(\",\")) {\n        venda = venda.toString().replace(\",\", \".\");\n      }\n\n      return parseFloat(venda).toFixed(2).replace(\".\", \",\").replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n    }\n\n    function dataMes(d) {\n      var data = new Date(d),\n          dia = data.getDate().toString(),\n          diaF = dia.length == 1 ? '0' + dia : dia,\n          mes = (data.getMonth() + 1).toString(),\n          //+1 pois no getMonth Janeiro começa com zero.\n      mesF = mes.length == 1 ? '0' + mes : mes,\n          anoF = data.getFullYear();\n      return mesF;\n    }\n\n    function dataAno(d) {\n      var data = new Date(d),\n          dia = data.getDate().toString(),\n          diaF = dia.length == 1 ? '0' + dia : dia,\n          mes = (data.getMonth() + 1).toString(),\n          //+1 pois no getMonth Janeiro começa com zero.\n      mesF = mes.length == 1 ? '0' + mes : mes,\n          anoF = data.getFullYear();\n      return anoF;\n    }\n\n    function tomorrow(dt) {\n      // Creating the date instance\n      let d = new Date(dt); // Adding one date to the present date\n\n      d.setDate(d.getDate() + 1);\n      let year = d.getFullYear();\n      let month = String(d.getMonth() + 1);\n      let day = String(d.getDate());\n      let mes = null; // Adding leading 0 if the day or month\n      // is one digit value\n\n      month = month.length == 1 ? month.padStart('2', '0') : month; //   if(month == '01'){ mes = 'Jan' }\n      //   if(month == '02'){ mes = 'Feb' }\n      //   if(month == '03'){ mes = 'Mar' }\n      //   if(month == '04'){ mes = 'Apr' }\n      //   if(month == '05'){ mes = 'May' }\n      //   if(month == '06'){ mes = 'Jun' }\n      //   if(month == '07'){ mes = 'Jul' }\n      //   if(month == '08'){ mes = 'Aug' }\n      //   if(month == '09'){ mes = 'Sept' }\n      //   if(month == '10'){ mes = 'Oct' }\n      //   if(month == '11'){ mes = 'Nov' }\n      //  if(month == '12'){ mes = 'Dec' }        \n\n      day = day.length == 1 ? day.padStart('2', '0') : day; // Printing the present date \n\n      return `${day}/${month}/${year}`;\n    }\n\n    function calculaMes() {\n      store.relAnual = [{\n        mes: 'janeiro',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '01' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'fevereiro',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '02' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'marco',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '03' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'abril',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '04' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'maio',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '05' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'junho',\n        total: somaValor(store.itensRelVendas.filter(f => f.MES == '06' && f.ANO == store.anoSelecionado).map(x => x.VALOR))\n      }, {\n        mes: 'julho',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '07' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'agosto',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '08' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'setembro',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '09' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'outubro',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '10' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'novembro',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '11' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }, {\n        mes: 'desembro',\n        total: formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.MES == '12' && f.ANO == store.anoSelecionado).map(x => x.VALOR)))\n      }];\n    }\n\n    const unique_visitor_options = computed(() => {\n      return {\n        chart: {\n          height: 350,\n          type: 'bar'\n        },\n        dataLabels: {\n          enabled: !store.detectar_mobile(),\n          formatter: function (val) {\n            return \"R$ \" + val;\n          },\n          offsetY: -20,\n          style: {\n            fontSize: '11px',\n            colors: [\"#888EA8\"]\n          }\n        },\n        colors: ['#5c1ac3'],\n        plotOptions: {\n          bar: {\n            columnWidth: '90%',\n            borderRadius: 0,\n            dataLabels: {\n              position: 'top' // top, center, bottom\n\n            }\n          }\n        },\n        legend: {\n          position: 'bottom',\n          horizontalAlign: 'center',\n          fontSize: '14px',\n          markers: {\n            width: 12,\n            height: 12\n          },\n          itemMargin: {\n            horizontal: 7,\n            vertical: 8\n          }\n        },\n        grid: {\n          borderColor: '#e0e6ed'\n        },\n        xaxis: {\n          categories: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n          axisBorder: {\n            show: true,\n            color: '#e0e6ed'\n          }\n        },\n        yaxis: {\n          tickAmount: 6\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shade: 'light',\n            type: 'vertical',\n            shadeIntensity: 0.3,\n            inverseColors: false,\n            opacityFrom: 1,\n            opacityTo: 0.8,\n            stops: [0, 100]\n          }\n        },\n        tooltip: {\n          theme: 'light',\n          y: {\n            formatter: function (val) {\n              return val;\n            }\n          }\n        }\n      };\n    });\n    const __returned__ = {\n      code_arr,\n      store,\n      storeLogin,\n      bind_data,\n      getFormasPgto,\n      getVendas,\n\n      get arredonda() {\n        return arredonda;\n      },\n\n      set arredonda(v) {\n        arredonda = v;\n      },\n\n      somaValor,\n      formataDinheiro,\n      dataMes,\n      dataAno,\n      tomorrow,\n      calculaMes,\n      unique_visitor_options,\n      Progress,\n      onMounted,\n      ref,\n      computed,\n\n      get axios() {\n        return axios;\n      },\n\n      get useMeta() {\n        return useMeta;\n      },\n\n      get ApexChart() {\n        return ApexChart;\n      },\n\n      get indexStore() {\n        return indexStore;\n      },\n\n      get useUserStore() {\n        return useUserStore;\n      },\n\n      Filtros\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["Progress","onMounted","ref","computed","axios","useMeta","ApexChart","indexStore","useUserStore","Filtros","title","code_arr","store","storeLogin","relAnual","anoSelecionado","dataAno","Date","bind_data","getFormasPgto","formasPagamentos","data","JSON","stringify","empresas","schema","config","method","maxBodyLength","Infinity","url","baseApiHTTPS","headers","request","then","response","map","x","itens","ID","id","DESCRICAO","descricao","PERCENTUAL","taxa","push","catch","error","console","log","getVendas","dataIni","dataFim","itensRelVendas","filter","f","tipo_venda","dados","MES","dataMes","ANO","CATGO","categoria","PRODUTO","cod_produto","NOME","nome","QTDE","qtde","VALOR","valor","CUSTO","custo","LUCRO","arredonda","lucro","PERC_LUCRO","perc_lucro","FORMA_PGTO","forma_pgto","TIPO_VENDA","calculaMes","numero","casasDecimais","Math","floor","somaValor","array","arr","sum","i","length","formataDinheiro","item","venda","toString","includes","replace","parseFloat","toFixed","d","dia","getDate","diaF","mes","getMonth","mesF","anoF","getFullYear","tomorrow","dt","setDate","year","month","String","day","padStart","total","unique_visitor_options","chart","height","type","dataLabels","enabled","detectar_mobile","formatter","val","offsetY","style","fontSize","colors","plotOptions","bar","columnWidth","borderRadius","position","legend","horizontalAlign","markers","width","itemMargin","horizontal","vertical","grid","borderColor","xaxis","categories","axisBorder","show","color","yaxis","tickAmount","fill","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","tooltip","theme","y"],"sources":["/home/renato/projetos/pdvsmart/src/views/dashboard/Dashboard.vue"],"sourcesContent":["<template>\n<div style=\"margin-top: 0px\">   \n    <div style=\"display: flex;  \">\n        <Filtros />\n        <div     v-if=\"store.filtro.dataInicial && store.filtro.dataFinal\"\n                style=\"margin-top: 17px;\">\n            <div style=\"background-color: rgb(153, 193, 134);\n                    margin-top: 35px;\n                    height: 35px;\n                    \"\n                class=\"btn btn-primary mt-3\"\n                @click=\"getVendas(tomorrow(store.filtro.dataInicial),tomorrow(store.filtro.dataFinal))\"\n                        >\n                buscar\n            </div>\n        </div> \n    </div>\n    <div> \n</div>\n\n    <div v-for=\"mes,indexMes in []\" :key=\"indexMes\">\n        {{mes}} - {{ formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.DATA == mes).map(x => x.VALOR))) }}   \n    </div>   \n\n    <div style=\"max-width: 90%;\" class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12 layout-spacing\" v-if=\"store.relAnual\"> \n                <div class=\"widget widget-unique-visitors\">\n                    <div class=\"widget-heading\">\n                        <h5>Vendas Total Mensal</h5>\n                        <div class=\"task-action\">\n                            <div class=\"dropdown btn-group\">\n                                <a href=\"javascript:;\" id=\"ddlVisitors\" class=\"btn dropdown-toggle btn-icon-only\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width=\"24\"\n                                        height=\"24\"\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        stroke-width=\"2\"\n                                        stroke-linecap=\"round\"\n                                        stroke-linejoin=\"round\"\n                                        class=\"feather feather-more-horizontal\"\n                                    >\n                                        <circle cx=\"12\" cy=\"12\" r=\"1\"></circle>\n                                        <circle cx=\"19\" cy=\"12\" r=\"1\"></circle>\n                                        <circle cx=\"5\" cy=\"12\" r=\"1\"></circle>\n                                    </svg>\n                                </a>\n                               \n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"widget-content\">\n                        <apex-chart v-if=\"unique_visitor_options\" height=\"350\" type=\"bar\" \n                            :options=\"unique_visitor_options\" \n                            :series=\" [{name: 'mes' ,data: store.relAnual.map(x => x.total)}]  \"\n                            >\n                        </apex-chart>\n                    </div>\n                </div>\n            </div>\n \n \n</div>\n</template>\n\n<script setup> \n    import Progress from '@/components/Progress.vue';   \n    import { onMounted, ref, computed } from 'vue';\n    import axios from 'axios'\n    import { useMeta } from '@/composables/use-meta';\n    // import Filtros from './Filtros.vue'\n    import ApexChart from 'vue3-apexcharts';  \n    import {indexStore, useUserStore} from '../../store/indexStore'\n    import Filtros from './Filtros.vue'\n    useMeta({ title: 'Multiple Tables' }); \n    const code_arr = ref([]); \n    const store = indexStore(); \n    const storeLogin = useUserStore();\n\n    store.relAnual = []\n    store.anoSelecionado = dataAno(new Date()) \n \n\n    onMounted(() => {\n        bind_data(); \n    });\n\n    const bind_data = async  () => { \n\n        getFormasPgto()\n\n    }\n\n    store.formasPagamentos = []\n\nconst getFormasPgto = () => {\n      let data = JSON.stringify({\n  \"SCHEMA\": storeLogin.empresas?.schema \n  });\n\n  let config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: store.baseApiHTTPS+'/GetFormapagamento',\n  headers: { \n      'Content-Type': 'application/json'\n  },\n  data : data\n  };\n\n  axios.request(config)\n  .then((response) => { \n  response.data.map(x=> {\n          const itens ={\n              ID: x.id,\n              DESCRICAO: x.descricao,\n              PERCENTUAL: x.taxa         \n      }\n      store.formasPagamentos.push(itens)\n      }) \n  })\n  .catch((error) => {\n  console.log(error);\n  });\n  }\n\n    function getVendas(dataIni, dataFim){\n        store.itensRelVendas = []\n\n        let data = JSON.stringify({\n        \"DATAINI\": '01/01/2024',\n        \"DATAFIM\": dataFim,\n        \"SCHEMA\": 'MERCEARIABRAGATTO'\n        });\n\n        let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: store.baseApiHTTPS+'/periodovendas',\n        headers: { \n            'Content-Type': 'application/json'\n        },\n        data : data\n        };\n\n        axios.request(config)\n        .then((response) => {\n            response.data.filter(f=> f.tipo_venda=='NORMAL').map(x =>{\n                const dados = { \n                    ID: x.id,\n                    MES: dataMes(x.data),\n                    ANO: dataAno(x.data),\n                    CATGO: x.categoria,\n                    PRODUTO: x.cod_produto,\n                    NOME: x.nome,\n                    QTDE: x.qtde,\n                    NOME: x.nome, \n                    VALOR: x.valor,\n                    CUSTO: x.custo,\n                    LUCRO: arredonda(x.lucro,2),\n                    PERC_LUCRO: arredonda(x.perc_lucro,2),\n                    FORMA_PGTO: x.forma_pgto,\n                    TIPO_VENDA: x.tipo_venda\n                } \n                store.itensRelVendas.push(dados)\n            })\n            calculaMes()\n        })\n        .catch((error) => {\n        console.log(error);\n        }); \n    }\n\n    var arredonda = function(numero, casasDecimais) {   \n    casasDecimais = typeof casasDecimais !== 'undefined' ?  casasDecimais : 0;\n    numero = typeof numero !== 'undefined' ?  numero : 0;\n    return +(Math.floor(numero + ('e+' + casasDecimais)) + ('e-' + casasDecimais));\n    };\n\n    function somaValor(array) { \n            var arr =  array     \n            var sum = 0; \n            for(var i =0;i<arr.length;i++){ \n              sum+=arr[i]; \n            }               \n            return sum\n          }\n\n   function formataDinheiro(item) {\n             let venda = item;\n             if (!!venda && venda.toString().includes(\",\")) {\n               venda = venda.toString().replace(\",\", \".\");\n             }\n             return parseFloat(venda)\n               .toFixed(2)\n               .replace(\".\", \",\")\n               .replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n        }\n\n   function dataMes(d){ \n        var data =  new Date(d),\n            dia  = data.getDate().toString(),\n            diaF = (dia.length == 1) ? '0'+dia : dia,\n            mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n            mesF = (mes.length == 1) ? '0'+mes : mes,\n            anoF = data.getFullYear();\n        return mesF \n        }\n\n        function dataAno(d){ \n        var data =  new Date(d),\n            dia  = data.getDate().toString(),\n            diaF = (dia.length == 1) ? '0'+dia : dia,\n            mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n            mesF = (mes.length == 1) ? '0'+mes : mes,\n            anoF = data.getFullYear();\n        return  anoF;\n        }\n\n function tomorrow  (dt)  {\n  \n  // Creating the date instance\n  let d = new Date(dt);\n\n  // Adding one date to the present date\n  d.setDate(d.getDate() + 1);\n\n  let year = d.getFullYear()\n  let month = String(d.getMonth() + 1)\n  let day = String(d.getDate())\n  let mes = null\n\n  // Adding leading 0 if the day or month\n  // is one digit value\n  month = month.length == 1 ? \n      month.padStart('2', '0') : month;\n\n   //   if(month == '01'){ mes = 'Jan' }\n   //   if(month == '02'){ mes = 'Feb' }\n   //   if(month == '03'){ mes = 'Mar' }\n   //   if(month == '04'){ mes = 'Apr' }\n   //   if(month == '05'){ mes = 'May' }\n   //   if(month == '06'){ mes = 'Jun' }\n   //   if(month == '07'){ mes = 'Jul' }\n   //   if(month == '08'){ mes = 'Aug' }\n   //   if(month == '09'){ mes = 'Sept' }\n   //   if(month == '10'){ mes = 'Oct' }\n   //   if(month == '11'){ mes = 'Nov' }\n   //  if(month == '12'){ mes = 'Dec' }        \n\n\n  day = day.length == 1 ? \n      day.padStart('2', '0') : day;\n\n  // Printing the present date \n  return(`${day}/${month}/${year}`);\n  }\n\n  function calculaMes(){\n     store.relAnual = [\n        {\n            mes: 'janeiro',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '01' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'fevereiro',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '02' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'marco',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '03' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'abril',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '04' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'maio',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '05' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'junho',\n            total: (somaValor(store.itensRelVendas.filter(f=> f.MES == '06' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'julho',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '07' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'agosto',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '08' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'setembro',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '09' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'outubro',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '10' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'novembro',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '11' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        },\n        {\n            mes: 'desembro',\n            total: formataDinheiro(somaValor(store.itensRelVendas.filter(f=> f.MES == '12' && f.ANO==store.anoSelecionado).map(x => x.VALOR)))\n        }\n    ]  \n  }\n   \n  \n    \n\n\n  const unique_visitor_options = computed(() => {\n        \n        return {\n            chart: { height: 350,      type: 'bar'},\n            dataLabels: { enabled: !store.detectar_mobile(), formatter: function (val) {return \"R$ \" +(val) },\n              offsetY: -20,\n              style: {\n                fontSize: '11px',\n                colors: [\"#888EA8\"]\n              }              \n            },\n             \n            colors: ['#5c1ac3'],\n            \n           \n\n            plotOptions: {\n              bar: {\n                columnWidth: '90%',\n                borderRadius: 0,\n                dataLabels: {\n                  position: 'top', // top, center, bottom\n                },\n              }\n            },\n            legend: { position: 'bottom', horizontalAlign: 'center', fontSize: '14px', markers: { width: 12, height: 12 }, itemMargin: { horizontal: 7, vertical: 8 } },\n            grid: { borderColor:  '#e0e6ed' },\n            xaxis: {\n                categories: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n                axisBorder: { show: true, color:   '#e0e6ed' },\n                \n            },\n            yaxis: {\n                tickAmount: 6,\n            },\n            fill: {\n                type: 'gradient',\n                gradient: { shade:  'light', type: 'vertical', shadeIntensity: 0.3, inverseColors: false, opacityFrom: 1, opacityTo: 0.8, stops: [0, 100] },\n            },\n            tooltip: {\n                theme:  'light',\n                y: {\n                    formatter: function (val) {\n                        return val;\n                    },\n                },\n            },\n        };\n    });\n\n     \n    \n</script>"]},"metadata":{},"sourceType":"module"}