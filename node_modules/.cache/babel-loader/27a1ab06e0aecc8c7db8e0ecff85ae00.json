{"ast":null,"code":"import store from './store';\nimport { $themeConfig } from '@themeConfig';\nexport default {\n  init() {\n    // set default styles\n    let val = localStorage.getItem('dark_mode'); // light, dark, system\n\n    if (!val) {\n      val = $themeConfig.theme;\n    }\n\n    store.commit('toggleDarkMode', val);\n    val = localStorage.getItem('menu_style'); // vertical, collapsible-vertical, horizontal\n\n    if (!val) {\n      val = $themeConfig.navigation;\n    }\n\n    store.commit('toggleMenuStyle', val);\n    val = localStorage.getItem('layout_style'); // full, boxed-layout, large-boxed-layout\n\n    if (!val) {\n      val = $themeConfig.layout;\n    }\n\n    store.commit('toggleLayoutStyle', val);\n    val = localStorage.getItem('i18n_locale'); // en, da, de, el, es, fr, hu, it, ja, pl, pt, ru, sv, tr, zh\n\n    if (!val) {\n      val = $themeConfig.lang;\n      const list = store.state.countryList;\n      const item = list.find(item => item.code === val);\n\n      if (item) {\n        this.toggleLanguage(item);\n      }\n    }\n  },\n\n  toggleLanguage(item) {\n    let lang = null;\n\n    if (item) {\n      lang = item;\n    } else {\n      let code = store.state.locale;\n\n      if (!code) {\n        code = localStorage.getItem('i18n_locale');\n      }\n\n      item = store.state.countryList.find(d => d.code === code);\n\n      if (item) {\n        lang = item;\n      }\n    }\n\n    if (!lang) {\n      lang = store.state.countryList.find(d => d.code === 'en');\n    }\n\n    store.commit('toggleLocale', lang.code);\n    return lang;\n  },\n\n  toggleMode(mode) {\n    if (!mode) {\n      let val = localStorage.getItem('dark_mode'); //light|dark|system\n\n      mode = val;\n\n      if (!val) {\n        mode = 'light';\n      }\n    }\n\n    store.commit('toggleDarkMode', mode || 'light');\n    return mode;\n  }\n\n};","map":{"version":3,"names":["store","$themeConfig","init","val","localStorage","getItem","theme","commit","navigation","layout","lang","list","state","countryList","item","find","code","toggleLanguage","locale","d","toggleMode","mode"],"sources":["/home/renato/projetos/pdvsmart/src/app-setting.js"],"sourcesContent":["import store from './store';\nimport { $themeConfig } from '@themeConfig';\n\nexport default {\n    init() {\n        // set default styles\n        let val = localStorage.getItem('dark_mode'); // light, dark, system\n        if (!val) {\n            val = $themeConfig.theme;\n        }\n        store.commit('toggleDarkMode', val);\n\n        val = localStorage.getItem('menu_style'); // vertical, collapsible-vertical, horizontal\n        if (!val) {\n            val = $themeConfig.navigation;\n        }\n        store.commit('toggleMenuStyle', val);\n\n        val = localStorage.getItem('layout_style'); // full, boxed-layout, large-boxed-layout\n        if (!val) {\n            val = $themeConfig.layout;\n        }\n        store.commit('toggleLayoutStyle', val);\n\n        val = localStorage.getItem('i18n_locale'); // en, da, de, el, es, fr, hu, it, ja, pl, pt, ru, sv, tr, zh\n        if (!val) {\n            val = $themeConfig.lang;\n\n            const list = store.state.countryList;\n            const item = list.find((item) => item.code === val);\n            if (item) {\n                this.toggleLanguage(item);\n            }\n        }\n    },\n\n    toggleLanguage(item) {\n        let lang = null;\n        if (item) {\n            lang = item;\n        } else {\n            let code = store.state.locale;\n            if (!code) {\n                code = localStorage.getItem('i18n_locale');\n            }\n\n            item = store.state.countryList.find((d) => d.code === code);\n            if (item) {\n                lang = item;\n            }\n        }\n\n        if (!lang) {\n            lang = store.state.countryList.find((d) => d.code === 'en');\n        }\n\n        store.commit('toggleLocale', lang.code);\n        return lang;\n    },\n\n    toggleMode(mode) {\n        if (!mode) {\n            let val = localStorage.getItem('dark_mode'); //light|dark|system\n            mode = val;\n            if (!val) {\n                mode = 'light';\n            }\n        }\n        store.commit('toggleDarkMode', mode || 'light');\n        return mode;\n    },\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,eAAe;EACXC,IAAI,GAAG;IACH;IACA,IAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAV,CAFG,CAE0C;;IAC7C,IAAI,CAACF,GAAL,EAAU;MACNA,GAAG,GAAGF,YAAY,CAACK,KAAnB;IACH;;IACDN,KAAK,CAACO,MAAN,CAAa,gBAAb,EAA+BJ,GAA/B;IAEAA,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAN,CARG,CAQuC;;IAC1C,IAAI,CAACF,GAAL,EAAU;MACNA,GAAG,GAAGF,YAAY,CAACO,UAAnB;IACH;;IACDR,KAAK,CAACO,MAAN,CAAa,iBAAb,EAAgCJ,GAAhC;IAEAA,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAN,CAdG,CAcyC;;IAC5C,IAAI,CAACF,GAAL,EAAU;MACNA,GAAG,GAAGF,YAAY,CAACQ,MAAnB;IACH;;IACDT,KAAK,CAACO,MAAN,CAAa,mBAAb,EAAkCJ,GAAlC;IAEAA,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAN,CApBG,CAoBwC;;IAC3C,IAAI,CAACF,GAAL,EAAU;MACNA,GAAG,GAAGF,YAAY,CAACS,IAAnB;MAEA,MAAMC,IAAI,GAAGX,KAAK,CAACY,KAAN,CAAYC,WAAzB;MACA,MAAMC,IAAI,GAAGH,IAAI,CAACI,IAAL,CAAWD,IAAD,IAAUA,IAAI,CAACE,IAAL,KAAcb,GAAlC,CAAb;;MACA,IAAIW,IAAJ,EAAU;QACN,KAAKG,cAAL,CAAoBH,IAApB;MACH;IACJ;EACJ,CA/BU;;EAiCXG,cAAc,CAACH,IAAD,EAAO;IACjB,IAAIJ,IAAI,GAAG,IAAX;;IACA,IAAII,IAAJ,EAAU;MACNJ,IAAI,GAAGI,IAAP;IACH,CAFD,MAEO;MACH,IAAIE,IAAI,GAAGhB,KAAK,CAACY,KAAN,CAAYM,MAAvB;;MACA,IAAI,CAACF,IAAL,EAAW;QACPA,IAAI,GAAGZ,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAP;MACH;;MAEDS,IAAI,GAAGd,KAAK,CAACY,KAAN,CAAYC,WAAZ,CAAwBE,IAAxB,CAA8BI,CAAD,IAAOA,CAAC,CAACH,IAAF,KAAWA,IAA/C,CAAP;;MACA,IAAIF,IAAJ,EAAU;QACNJ,IAAI,GAAGI,IAAP;MACH;IACJ;;IAED,IAAI,CAACJ,IAAL,EAAW;MACPA,IAAI,GAAGV,KAAK,CAACY,KAAN,CAAYC,WAAZ,CAAwBE,IAAxB,CAA8BI,CAAD,IAAOA,CAAC,CAACH,IAAF,KAAW,IAA/C,CAAP;IACH;;IAEDhB,KAAK,CAACO,MAAN,CAAa,cAAb,EAA6BG,IAAI,CAACM,IAAlC;IACA,OAAON,IAAP;EACH,CAvDU;;EAyDXU,UAAU,CAACC,IAAD,EAAO;IACb,IAAI,CAACA,IAAL,EAAW;MACP,IAAIlB,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAV,CADO,CACsC;;MAC7CgB,IAAI,GAAGlB,GAAP;;MACA,IAAI,CAACA,GAAL,EAAU;QACNkB,IAAI,GAAG,OAAP;MACH;IACJ;;IACDrB,KAAK,CAACO,MAAN,CAAa,gBAAb,EAA+Bc,IAAI,IAAI,OAAvC;IACA,OAAOA,IAAP;EACH;;AAnEU,CAAf"},"metadata":{},"sourceType":"module"}