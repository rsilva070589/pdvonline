{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { onMounted, onUnmounted, ref } from 'vue';\nimport '@/assets/sass/scrollspyNav.scss';\nimport '@/assets/sass/components/custom-countdown.scss';\nimport highlight from '@/components/plugins/highlight.vue';\nimport { useMeta } from '@/composables/use-meta';\nexport default {\n  __name: 'countdown',\n\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    useMeta({\n      title: 'Countdown'\n    });\n    const code_arr = ref([]);\n    const timer1 = ref(null);\n    const demo1 = ref({\n      days: null,\n      hours: null,\n      minutes: null,\n      seconds: null\n    });\n    const timer2 = ref(null);\n    const demo2 = ref({\n      days: null,\n      hours: null,\n      minutes: null,\n      seconds: null\n    });\n    onMounted(() => {\n      set_timer_demo1();\n      set_timer_demo2();\n    });\n    onUnmounted(() => {\n      clearInterval(timer1.value);\n      clearInterval(timer2.value);\n    });\n\n    const toggleCode = name => {\n      if (code_arr.value.includes(name)) {\n        code_arr.value = code_arr.value.filter(d => d != name);\n      } else {\n        code_arr.value.push(name);\n      }\n    };\n\n    const set_timer_demo1 = () => {\n      let date = new Date();\n      date.setDate(date.getDate() + 3);\n      let countDownDate = date.getTime();\n      timer1.value = setInterval(() => {\n        let now = new Date().getTime();\n        let distance = countDownDate - now;\n        demo1.value.days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        demo1.value.hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        demo1.value.minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        demo1.value.seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n        if (distance < 0) {\n          clearInterval(timer1.value);\n        }\n      }, 500);\n    };\n\n    const set_timer_demo2 = () => {\n      let date = new Date();\n      date.setFullYear(date.getFullYear() + 1);\n      let countDownDate = date.getTime();\n      timer2.value = setInterval(() => {\n        let now = new Date().getTime();\n        let distance = countDownDate - now;\n        demo2.value.days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        demo2.value.hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        demo2.value.minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        demo2.value.seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n        if (distance < 0) {\n          clearInterval(timer2.value);\n        }\n      }, 500);\n    };\n\n    const __returned__ = {\n      code_arr,\n      timer1,\n      demo1,\n      timer2,\n      demo2,\n      toggleCode,\n      set_timer_demo1,\n      set_timer_demo2,\n      onMounted,\n      onUnmounted,\n      ref,\n      highlight,\n\n      get useMeta() {\n        return useMeta;\n      }\n\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AA8LI,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,GAAjC,QAA4C,KAA5C;AACA,OAAO,iCAAP;AACA,OAAO,gDAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,SAASC,OAAT,QAAwB,wBAAxB;;;;;;;;;IACAA,OAAO,CAAC;MAAEC,KAAK,EAAE;IAAT,CAAD,CAAP;IAEA,MAAMC,QAAQ,GAAGJ,GAAG,CAAC,EAAD,CAApB;IACA,MAAMK,MAAM,GAAGL,GAAG,CAAC,IAAD,CAAlB;IACA,MAAMM,KAAK,GAAGN,GAAG,CAAC;MACdO,IAAI,EAAE,IADQ;MAEdC,KAAK,EAAE,IAFO;MAGdC,OAAO,EAAE,IAHK;MAIdC,OAAO,EAAE;IAJK,CAAD,CAAjB;IAMA,MAAMC,MAAM,GAAGX,GAAG,CAAC,IAAD,CAAlB;IACA,MAAMY,KAAK,GAAGZ,GAAG,CAAC;MACdO,IAAI,EAAE,IADQ;MAEdC,KAAK,EAAE,IAFO;MAGdC,OAAO,EAAE,IAHK;MAIdC,OAAO,EAAE;IAJK,CAAD,CAAjB;IAOAZ,SAAS,CAAC,MAAM;MACZe,eAAe;MACfC,eAAe;IAClB,CAHQ,CAAT;IAKAf,WAAW,CAAC,MAAM;MACdgB,aAAa,CAACV,MAAM,CAACW,KAAR,CAAb;MACAD,aAAa,CAACJ,MAAM,CAACK,KAAR,CAAb;IACH,CAHU,CAAX;;IAKA,MAAMC,UAAU,GAAIC,IAAD,IAAU;MACzB,IAAId,QAAQ,CAACY,KAAT,CAAeG,QAAf,CAAwBD,IAAxB,CAAJ,EAAmC;QAC/Bd,QAAQ,CAACY,KAAT,GAAiBZ,QAAQ,CAACY,KAAT,CAAeI,MAAf,CAAuBC,CAAD,IAAOA,CAAC,IAAIH,IAAlC,CAAjB;MACH,CAFD,MAEO;QACHd,QAAQ,CAACY,KAAT,CAAeM,IAAf,CAAoBJ,IAApB;MACH;IACJ,CAND;;IAQA,MAAML,eAAe,GAAG,MAAM;MAC1B,IAAIU,IAAI,GAAG,IAAIC,IAAJ,EAAX;MACAD,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiB,CAA9B;MACA,IAAIC,aAAa,GAAGJ,IAAI,CAACK,OAAL,EAApB;MAEAvB,MAAM,CAACW,KAAP,GAAea,WAAW,CAAC,MAAM;QAC7B,IAAIC,GAAG,GAAG,IAAIN,IAAJ,GAAWI,OAAX,EAAV;QAEA,IAAIG,QAAQ,GAAGJ,aAAa,GAAGG,GAA/B;QAEAxB,KAAK,CAACU,KAAN,CAAYT,IAAZ,GAAmByB,IAAI,CAACC,KAAL,CAAWF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAnB;QACAzB,KAAK,CAACU,KAAN,CAAYR,KAAZ,GAAoBwB,IAAI,CAACC,KAAL,CAAYF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAApB;QACAzB,KAAK,CAACU,KAAN,CAAYP,OAAZ,GAAsBuB,IAAI,CAACC,KAAL,CAAYF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAtB;QACAzB,KAAK,CAACU,KAAN,CAAYN,OAAZ,GAAsBsB,IAAI,CAACC,KAAL,CAAYF,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAtB;;QAEA,IAAIA,QAAQ,GAAG,CAAf,EAAkB;UACdhB,aAAa,CAACV,MAAM,CAACW,KAAR,CAAb;QACH;MACJ,CAbyB,EAavB,GAbuB,CAA1B;IAcH,CAnBD;;IAqBA,MAAMF,eAAe,GAAG,MAAM;MAC1B,IAAIS,IAAI,GAAG,IAAIC,IAAJ,EAAX;MACAD,IAAI,CAACW,WAAL,CAAiBX,IAAI,CAACY,WAAL,KAAqB,CAAtC;MACA,IAAIR,aAAa,GAAGJ,IAAI,CAACK,OAAL,EAApB;MAEAjB,MAAM,CAACK,KAAP,GAAea,WAAW,CAAC,MAAM;QAC7B,IAAIC,GAAG,GAAG,IAAIN,IAAJ,GAAWI,OAAX,EAAV;QAEA,IAAIG,QAAQ,GAAGJ,aAAa,GAAGG,GAA/B;QAEAlB,KAAK,CAACI,KAAN,CAAYT,IAAZ,GAAmByB,IAAI,CAACC,KAAL,CAAWF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAnB;QACAnB,KAAK,CAACI,KAAN,CAAYR,KAAZ,GAAoBwB,IAAI,CAACC,KAAL,CAAYF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAApB;QACAnB,KAAK,CAACI,KAAN,CAAYP,OAAZ,GAAsBuB,IAAI,CAACC,KAAL,CAAYF,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAtB;QACAnB,KAAK,CAACI,KAAN,CAAYN,OAAZ,GAAsBsB,IAAI,CAACC,KAAL,CAAYF,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAtB;;QAEA,IAAIA,QAAQ,GAAG,CAAf,EAAkB;UACdhB,aAAa,CAACJ,MAAM,CAACK,KAAR,CAAb;QACH;MACJ,CAbyB,EAavB,GAbuB,CAA1B;IAcH,CAnBD","names":["onMounted","onUnmounted","ref","highlight","useMeta","title","code_arr","timer1","demo1","days","hours","minutes","seconds","timer2","demo2","set_timer_demo1","set_timer_demo2","clearInterval","value","toggleCode","name","includes","filter","d","push","date","Date","setDate","getDate","countDownDate","getTime","setInterval","now","distance","Math","floor","setFullYear","getFullYear"],"sources":["/home/renato/projetos/pdvsmart/src/views/components/countdown.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <teleport to=\"#breadcrumb\">\n            <ul class=\"navbar-nav flex-row\">\n                <li>\n                    <div class=\"page-header\">\n                        <nav class=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                                <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Components</a></li>\n                                <li class=\"breadcrumb-item active\" aria-current=\"page\"><span>Countdown</span></li>\n                            </ol>\n                        </nav>\n                    </div>\n                </li>\n            </ul>\n        </teleport>\n\n        <div class=\"container\">\n            <div id=\"navSection\" class=\"nav sidenav\">\n                <div class=\"sidenav-content\" v-scroll-spy-active v-scroll-spy-link>\n                    <a href=\"#countdownseperator\" class=\"nav-link\">Seperator</a>\n                    <a href=\"#countdowncircle\" class=\"nav-link\">Circle</a>\n                </div>\n            </div>\n\n            <div v-scroll-spy class=\"row layout-top-spacing\">\n                <div id=\"countdownseperator\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Simple Countdown</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <div class=\"container\">\n                                <div id=\"cd-simple\">\n                                    <div class=\"countdown\">\n                                        <div class=\"clock-count-container\">\n                                            <h1 class=\"clock-val\">{{ demo1.days }}</h1>\n                                        </div>\n                                        <h4 class=\"clock-text\">Days</h4>\n                                    </div>\n                                    <div class=\"countdown\">\n                                        <div class=\"clock-count-container\">\n                                            <h1 class=\"clock-val\">{{ demo1.hours }}</h1>\n                                        </div>\n                                        <h4 class=\"clock-text\">Hours</h4>\n                                    </div>\n                                    <div class=\"countdown\">\n                                        <div class=\"clock-count-container\">\n                                            <h1 class=\"clock-val\">{{ demo1.minutes }}</h1>\n                                        </div>\n                                        <h4 class=\"clock-text\">Mins</h4>\n                                    </div>\n                                    <div class=\"countdown\">\n                                        <div class=\"clock-count-container\">\n                                            <h1 class=\"clock-val\">{{ demo1.seconds }}</h1>\n                                        </div>\n                                        <h4 class=\"clock-text\">Sec</h4>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"code-section-container show-code\">\n                                <button type=\"button\" class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code1')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code1')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <div v-pre>\n                                            <pre>\n&lt;div id=&quot;cd-simple&quot;&gt;\n    &lt;div class=&quot;countdown&quot;&gt;\n        &lt;div class=&quot;clock-count-container&quot;&gt;\n            &lt;h1 class=&quot;clock-val&quot;&gt;{{ demo1.days }}&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;h4 class=&quot;clock-text&quot;&gt;Days&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;countdown&quot;&gt;\n        &lt;div class=&quot;clock-count-container&quot;&gt;\n            &lt;h1 class=&quot;clock-val&quot;&gt;{{ demo1.hours }}&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;h4 class=&quot;clock-text&quot;&gt;Hours&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;countdown&quot;&gt;\n        &lt;div class=&quot;clock-count-container&quot;&gt;\n            &lt;h1 class=&quot;clock-val&quot;&gt;{{ demo1.minutes }}&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;h4 class=&quot;clock-text&quot;&gt;Mins&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;countdown&quot;&gt;\n        &lt;div class=&quot;clock-count-container&quot;&gt;\n            &lt;h1 class=&quot;clock-val&quot;&gt;{{ demo1.seconds }}&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;h4 class=&quot;clock-text&quot;&gt;Sec&lt;/h4&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n                                            </pre>\n                                        </div>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"countdowncircle\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Circle Countdown</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <div class=\"container\">\n                                <div id=\"cd-circle\">\n                                    <div class=\"countdown\">\n                                        <div class=\"clock-count-container\">\n                                            <h1 class=\"clock-val\">{{ demo2.days }}</h1>\n                                        </div>\n                                        <h4 class=\"clock-text\">Days</h4>\n                                    </div>\n                                    <div class=\"countdown\">\n                                        <div class=\"clock-count-container\">\n                                            <h1 class=\"clock-val\">{{ demo2.hours }}</h1>\n                                        </div>\n                                        <h4 class=\"clock-text\">Hours</h4>\n                                    </div>\n                                    <div class=\"countdown\">\n                                        <div class=\"clock-count-container\">\n                                            <h1 class=\"clock-val\">{{ demo2.minutes }}</h1>\n                                        </div>\n                                        <h4 class=\"clock-text\">Mins</h4>\n                                    </div>\n                                    <div class=\"countdown\">\n                                        <div class=\"clock-count-container\">\n                                            <h1 class=\"clock-val\">{{ demo2.seconds }}</h1>\n                                        </div>\n                                        <h4 class=\"clock-text\">Sec</h4>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"code-section-container show-code\">\n                                <button type=\"button\" class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code2')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code2')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <div v-pre>\n                                            <pre>\n&lt;div id=&quot;cd-circle&quot;&gt;\n    &lt;div class=&quot;countdown&quot;&gt;\n        &lt;div class=&quot;clock-count-container&quot;&gt;\n            &lt;h1 class=&quot;clock-val&quot;&gt;{{ demo2.days }}&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;h4 class=&quot;clock-text&quot;&gt;Days&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;countdown&quot;&gt;\n        &lt;div class=&quot;clock-count-container&quot;&gt;\n            &lt;h1 class=&quot;clock-val&quot;&gt;{{ demo2.hours }}&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;h4 class=&quot;clock-text&quot;&gt;Hours&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;countdown&quot;&gt;\n        &lt;div class=&quot;clock-count-container&quot;&gt;\n            &lt;h1 class=&quot;clock-val&quot;&gt;{{ demo2.minutes }}&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;h4 class=&quot;clock-text&quot;&gt;Mins&lt;/h4&gt;\n    &lt;/div&gt;\n    &lt;div class=&quot;countdown&quot;&gt;\n        &lt;div class=&quot;clock-count-container&quot;&gt;\n            &lt;h1 class=&quot;clock-val&quot;&gt;{{ demo2.seconds }}&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;h4 class=&quot;clock-text&quot;&gt;Sec&lt;/h4&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n                                            </pre>\n                                        </div>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import { onMounted, onUnmounted, ref } from 'vue';\n    import '@/assets/sass/scrollspyNav.scss';\n    import '@/assets/sass/components/custom-countdown.scss';\n    import highlight from '@/components/plugins/highlight.vue';\n\n    import { useMeta } from '@/composables/use-meta';\n    useMeta({ title: 'Countdown' });\n\n    const code_arr = ref([]);\n    const timer1 = ref(null);\n    const demo1 = ref({\n        days: null,\n        hours: null,\n        minutes: null,\n        seconds: null,\n    });\n    const timer2 = ref(null);\n    const demo2 = ref({\n        days: null,\n        hours: null,\n        minutes: null,\n        seconds: null,\n    });\n\n    onMounted(() => {\n        set_timer_demo1();\n        set_timer_demo2();\n    });\n\n    onUnmounted(() => {\n        clearInterval(timer1.value);\n        clearInterval(timer2.value);\n    });\n\n    const toggleCode = (name) => {\n        if (code_arr.value.includes(name)) {\n            code_arr.value = code_arr.value.filter((d) => d != name);\n        } else {\n            code_arr.value.push(name);\n        }\n    };\n\n    const set_timer_demo1 = () => {\n        let date = new Date();\n        date.setDate(date.getDate() + 3);\n        let countDownDate = date.getTime();\n\n        timer1.value = setInterval(() => {\n            let now = new Date().getTime();\n\n            let distance = countDownDate - now;\n\n            demo1.value.days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            demo1.value.hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            demo1.value.minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            demo1.value.seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            if (distance < 0) {\n                clearInterval(timer1.value);\n            }\n        }, 500);\n    };\n\n    const set_timer_demo2 = () => {\n        let date = new Date();\n        date.setFullYear(date.getFullYear() + 1);\n        let countDownDate = date.getTime();\n\n        timer2.value = setInterval(() => {\n            let now = new Date().getTime();\n\n            let distance = countDownDate - now;\n\n            demo2.value.days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            demo2.value.hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            demo2.value.minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            demo2.value.seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            if (distance < 0) {\n                clearInterval(timer2.value);\n            }\n        }, 500);\n    };\n</script>\n"]},"metadata":{},"sourceType":"module"}