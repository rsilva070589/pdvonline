{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport Progress from '@/components/Progress.vue';\nimport { indexStore } from '../../store/indexStore';\nimport { onMounted, ref } from 'vue';\nimport axios from 'axios';\nimport { useMeta } from '@/composables/use-meta';\nimport Filtros from './Filtros.vue';\nexport default {\n  __name: 'GerenciaVendas',\n\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    useMeta({\n      title: 'Multiple Tables'\n    });\n    const store = indexStore();\n    const code_arr = ref([]);\n    onMounted(() => {\n      bind_data();\n    });\n\n    const bind_data = async () => {\n      store.formasPagamentos = [];\n\n      const getFormasPgto = () => {\n        let data = JSON.stringify({\n          \"SCHEMA\": storeLogin.empresas?.schema\n        });\n        let config = {\n          method: 'post',\n          maxBodyLength: Infinity,\n          url: store.baseApiHTTPS + '/GetFormapagamento',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: data\n        };\n        axios.request(config).then(response => {\n          response.data.map(x => {\n            const itens = {\n              ID: x.id,\n              DESCRICAO: x.descricao,\n              PERCENTUAL: x.taxa\n            };\n            store.formasPagamentos.push(itens);\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      };\n\n      getFormasPgto();\n      store.recursos.progress = false;\n    };\n\n    function getVendas(dataIni, dataFim) {\n      store.itensRelVendas = [];\n      let data = JSON.stringify({\n        \"DATAINI\": dataIni,\n        \"DATAFIM\": dataFim\n      });\n      let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: store.baseApiHTTPS + '/periodovendas',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: data\n      };\n      axios.request(config).then(response => {\n        response.data.filter(f => f.tipo_venda == 'NORMAL').map(x => {\n          const dados = {\n            ID: x.id,\n            DATA: x.data,\n            CATGO: x.categoria,\n            PRODUTO: x.cod_produto,\n            NOME: x.nome,\n            QTDE: x.qtde,\n            NOME: x.nome,\n            VLR: x.valor,\n            CUSTO: x.custo,\n            LUCRO: arredonda(x.lucro, 2),\n            PERC_LUCRO: arredonda(x.perc_lucro, 2),\n            FORMA_PGTO: x.forma_pgto,\n            MES: x.mes,\n            TIPO_VENDA: x.tipo_venda\n          };\n          store.itensRelVendas.push(dados);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    var arredonda = function (numero, casasDecimais) {\n      casasDecimais = typeof casasDecimais !== 'undefined' ? casasDecimais : 0;\n      numero = typeof numero !== 'undefined' ? numero : 0;\n      return +(Math.floor(numero + ('e+' + casasDecimais)) + ('e-' + casasDecimais));\n    };\n\n    function somaValor(array) {\n      var arr = array;\n      var sum = 0;\n\n      for (var i = 0; i < arr.length; i++) {\n        sum += arr[i];\n      }\n\n      return sum;\n    }\n\n    function formataDinheiro(item) {\n      let venda = item;\n\n      if (!!venda && venda.toString().includes(\",\")) {\n        venda = venda.toString().replace(\",\", \".\");\n      }\n\n      return parseFloat(venda).toFixed(2).replace(\".\", \",\").replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n    }\n\n    function dataFormatada(d) {\n      var data = new Date(d),\n          dia = data.getDate().toString(),\n          diaF = dia.length == 1 ? '0' + dia : dia,\n          mes = (data.getMonth() + 1).toString(),\n          //+1 pois no getMonth Janeiro comeÃ§a com zero.\n      mesF = mes.length == 1 ? '0' + mes : mes,\n          anoF = data.getFullYear();\n      return diaF + \"/\" + mesF + \"/\" + anoF;\n    }\n\n    function tomorrow(dt) {\n      // Creating the date instance\n      let d = new Date(dt); // Adding one date to the present date\n\n      d.setDate(d.getDate() + 1);\n      let year = d.getFullYear();\n      let month = String(d.getMonth() + 1);\n      let day = String(d.getDate());\n      let mes = null; // Adding leading 0 if the day or month\n      // is one digit value\n\n      month = month.length == 1 ? month.padStart('2', '0') : month; //   if(month == '01'){ mes = 'Jan' }\n      //   if(month == '02'){ mes = 'Feb' }\n      //   if(month == '03'){ mes = 'Mar' }\n      //   if(month == '04'){ mes = 'Apr' }\n      //   if(month == '05'){ mes = 'May' }\n      //   if(month == '06'){ mes = 'Jun' }\n      //   if(month == '07'){ mes = 'Jul' }\n      //   if(month == '08'){ mes = 'Aug' }\n      //   if(month == '09'){ mes = 'Sept' }\n      //   if(month == '10'){ mes = 'Oct' }\n      //   if(month == '11'){ mes = 'Nov' }\n      //  if(month == '12'){ mes = 'Dec' }        \n\n      day = day.length == 1 ? day.padStart('2', '0') : day; // Printing the present date \n\n      return `${day}/${month}/${year}`;\n    }\n\n    function deleteItem(props) {\n      store.editando = false;\n      store.cadastroProduto.ID = 0;\n      var data = {\n        \"ID\": props.ID\n      };\n      var config = {\n        method: 'delete',\n        maxBodyLength: Infinity,\n        url: store.baseApiHTTPS + '/vendas/' + props.ID,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: data\n      };\n      axios(config).then(function (response) {\n        console.log(JSON.stringify(response.data));\n        bind_data();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    const __returned__ = {\n      store,\n      code_arr,\n      bind_data,\n      getVendas,\n\n      get arredonda() {\n        return arredonda;\n      },\n\n      set arredonda(v) {\n        arredonda = v;\n      },\n\n      somaValor,\n      formataDinheiro,\n      dataFormatada,\n      tomorrow,\n      deleteItem,\n      Progress,\n\n      get indexStore() {\n        return indexStore;\n      },\n\n      onMounted,\n      ref,\n\n      get axios() {\n        return axios;\n      },\n\n      get useMeta() {\n        return useMeta;\n      },\n\n      Filtros\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["Progress","indexStore","onMounted","ref","axios","useMeta","Filtros","title","store","code_arr","bind_data","formasPagamentos","getFormasPgto","data","JSON","stringify","storeLogin","empresas","schema","config","method","maxBodyLength","Infinity","url","baseApiHTTPS","headers","request","then","response","map","x","itens","ID","id","DESCRICAO","descricao","PERCENTUAL","taxa","push","catch","error","console","log","recursos","progress","getVendas","dataIni","dataFim","itensRelVendas","filter","f","tipo_venda","dados","DATA","CATGO","categoria","PRODUTO","cod_produto","NOME","nome","QTDE","qtde","VLR","valor","CUSTO","custo","LUCRO","arredonda","lucro","PERC_LUCRO","perc_lucro","FORMA_PGTO","forma_pgto","MES","mes","TIPO_VENDA","numero","casasDecimais","Math","floor","somaValor","array","arr","sum","i","length","formataDinheiro","item","venda","toString","includes","replace","parseFloat","toFixed","dataFormatada","d","Date","dia","getDate","diaF","getMonth","mesF","anoF","getFullYear","tomorrow","dt","setDate","year","month","String","day","padStart","deleteItem","props","editando","cadastroProduto"],"sources":["/home/renato/projetos/pdvsmart/src/views/gerencia/GerenciaVendas.vue"],"sourcesContent":["<template>\n \n    <div style=\"margin-top: -50px;\">\n           <div style=\"font-size: 35px;\">\n               Gerencia de Vendas\n           </div> \n    \n       <div style=\"display: flex;  \">\n           <div  >\n               <Filtros /> \n           </div> \n           <div    v-if=\"store.filtro.dataInicial && store.filtro.dataFinal\"\n           style=\" \n                            margin-top: 18px;\n                            height: 35px;                       \n                            \"\n                  >\n               <div \n                   class=\"btn btn-primary mt-3\"\n                   @click=\"getVendas(tomorrow(store.filtro.dataInicial),tomorrow(store.filtro.dataFinal))\"\n                           >\n                   buscar\n               </div>\n           </div> \n           \n           \n       </div>\n   \n       <div v-if=\"store.itensRelVendas.length > 0\" class=\"conteudo\"\n        style=\"padding: 10px 45px 0px 0px; \n                 width: 1000px; \n            max-height: 70vh;\"\n        >\n        <div v-if=\"!store.editando\" \n       style=\"padding: 10px 45px 0px 0px; width: 900px;\">\n       \n           <table  style=\"background-color: white;\" role=\"table\" aria-busy=\"false\" aria-colcount=\"5\" class=\"table b-table table-hover\" id=\"__BVID__310\">\n                   <thead role=\"rowgroup\" class=\"\">\n                       <tr role=\"row\" class=\"\">\n                           <th role=\"columnheader\" scope=\"col\" aria-colindex=\"1\" class=\"\"><div>#</div></th>\n                           <th role=\"columnheader\" scope=\"col\" aria-colindex=\"2\" class=\"\"><div>ID</div></th>\n                           <th role=\"columnheader\" scope=\"col\" aria-colindex=\"3\" class=\"\"><div>DATA</div></th>\n                           <th role=\"columnheader\" scope=\"col\" aria-colindex=\"4\" class=\"\" style=\"text-align: center;\"><div>R$</div></th> \n                           <th role=\"columnheader\" scope=\"col\" aria-colindex=\"5\" class=\"\"><div>PGTO</div></th>\n                           <th role=\"columnheader\" scope=\"col\" aria-colindex=\"5\" class=\"\"><div>TIPO</div></th>\n                           <th role=\"columnheader\" scope=\"col\" aria-colindex=\"5\" class=\"\"><div>actions</div></th>\n                       </tr>\n                   </thead> \n                   <tbody v-for=\"(item, i) in store.itensRelVendas\" :key=\"item.name\" role=\"rowgroup\">\n                       <tr role=\"row\" class=\"\">\n                        <td aria-colindex=\"1\" role=\"cell\" class=\"\">{{ i }}</td>\n                           <td aria-colindex=\"2\" role=\"cell\" class=\"\">{{ item.ID }}</td>\n                           <td aria-colindex=\"3\" role=\"cell\" class=\"\">{{ dataFormatada(item.DATA) }}</td>\n                           <td aria-colindex=\"4\" role=\"cell\" style=\"text-align: right;\">{{ formataDinheiro( item.VLR) }}</td> \n                           <td aria-colindex=\"5\" role=\"cell\" class=\"\">{{ store.formasPagamentos?.filter(f => f.ID == item.FORMA_PGTO).map(x => x.DESCRICAO)[0]  }}</td>\n                           <td aria-colindex=\"6\" role=\"cell\" class=\"\">{{ item.TIPO_VENDA }}</td>\n                           <td>\n                            <td>\n                                <span @click=\"selectItemEdit(item)\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-edit\"><path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg>\n                                </span>\n                            \n                                <span @click=\"deleteItem(item)\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-trash-2\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\n                                </span>\n                              </td>    \n                       </td>                       \n                       </tr>\n   \n                   </tbody>\n               </table> \n       </div>   \n       </div>\n       <div style=\"text-align: center; font-size: 20px; color: blue;\">\n                   Total: {{ formataDinheiro(somaValor(store.itensRelVendas.filter(f => f.TIPO_VENDA=='NORMAL').map(x => x.VLR))) }}\n               </div> \n   </div>\n   \n   \n   </template>\n   \n   <script setup>\n    import Progress from '@/components/Progress.vue';\n       import {indexStore} from '../../store/indexStore' \n       import { onMounted, ref } from 'vue';\n       import axios from 'axios'\n       import { useMeta } from '@/composables/use-meta';\n       import Filtros from './Filtros.vue'\n       useMeta({ title: 'Multiple Tables' });\n       const store = indexStore(); \n       const code_arr = ref([]); \n   \n    \n     onMounted(() => {\n           bind_data();\n       });\n   \n       const bind_data = async  () => { \n   \n          store.formasPagamentos = []\n          const getFormasPgto = ()=> {\n    let data = JSON.stringify({\n  \"SCHEMA\": storeLogin.empresas?.schema \n});\n\nlet config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: store.baseApiHTTPS+'/GetFormapagamento',\n  headers: { \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios.request(config)\n.then((response) => { \n  response.data.map(x=> {\n        const itens ={\n            ID: x.id,\n            DESCRICAO: x.descricao,\n            PERCENTUAL: x.taxa         \n       }\n       store.formasPagamentos.push(itens)\n       }) \n})\n.catch((error) => {\n  console.log(error);\n});\n}\n\ngetFormasPgto()\n\n\n           store.recursos.progress = false\n   \n       }\n   \n       function getVendas(dataIni, dataFim){\n           store.itensRelVendas = []\n   \n           let data = JSON.stringify({\n           \"DATAINI\": dataIni,\n           \"DATAFIM\": dataFim\n           });\n   \n           let config = {\n           method: 'post',\n           maxBodyLength: Infinity,\n           url: store.baseApiHTTPS+'/periodovendas',\n           headers: { \n               'Content-Type': 'application/json'\n           },\n           data : data\n           };\n   \n           axios.request(config)\n           .then((response) => {\n               response.data.filter(f => f.tipo_venda=='NORMAL').map(x =>{\n                   const dados = { \n                       ID: x.id,\n                       DATA: x.data,\n                       CATGO: x.categoria,\n                       PRODUTO: x.cod_produto,\n                       NOME: x.nome,\n                       QTDE: x.qtde,\n                       NOME: x.nome, \n                       VLR: x.valor,\n                       CUSTO: x.custo,\n                       LUCRO: arredonda(x.lucro,2),\n                       PERC_LUCRO: arredonda(x.perc_lucro,2),\n                       FORMA_PGTO: x.forma_pgto,\n                       MES: x.mes,\n                       TIPO_VENDA: x.tipo_venda\n                   } \n                   store.itensRelVendas.push(dados)\n               })\n           })\n           .catch((error) => {\n           console.log(error);\n           }); \n       }\n   \n       var arredonda = function(numero, casasDecimais) {   \n       casasDecimais = typeof casasDecimais !== 'undefined' ?  casasDecimais : 0;\n       numero = typeof numero !== 'undefined' ?  numero : 0;\n       return +(Math.floor(numero + ('e+' + casasDecimais)) + ('e-' + casasDecimais));\n       };\n   \n       function somaValor(array) { \n               var arr =  array     \n               var sum = 0; \n               for(var i =0;i<arr.length;i++){ \n                 sum+=arr[i]; \n               }  \n                \n               return sum\n             }\n   \n      function formataDinheiro(item) {\n                let venda = item;\n                if (!!venda && venda.toString().includes(\",\")) {\n                  venda = venda.toString().replace(\",\", \".\");\n                }\n                return parseFloat(venda)\n                  .toFixed(2)\n                  .replace(\".\", \",\")\n                  .replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n           }\n   \n      function dataFormatada(d){ \n           var data =  new Date(d),\n               dia  = data.getDate().toString(),\n               diaF = (dia.length == 1) ? '0'+dia : dia,\n               mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro comeÃ§a com zero.\n               mesF = (mes.length == 1) ? '0'+mes : mes,\n               anoF = data.getFullYear();\n           return diaF+\"/\"+mesF+\"/\"+anoF;\n           }\n   \n    function tomorrow  (dt)  {\n     \n     // Creating the date instance\n     let d = new Date(dt);\n   \n     // Adding one date to the present date\n     d.setDate(d.getDate() + 1);\n   \n     let year = d.getFullYear()\n     let month = String(d.getMonth() + 1)\n     let day = String(d.getDate())\n     let mes = null\n   \n     // Adding leading 0 if the day or month\n     // is one digit value\n     month = month.length == 1 ? \n         month.padStart('2', '0') : month;\n   \n      //   if(month == '01'){ mes = 'Jan' }\n      //   if(month == '02'){ mes = 'Feb' }\n      //   if(month == '03'){ mes = 'Mar' }\n      //   if(month == '04'){ mes = 'Apr' }\n      //   if(month == '05'){ mes = 'May' }\n      //   if(month == '06'){ mes = 'Jun' }\n      //   if(month == '07'){ mes = 'Jul' }\n      //   if(month == '08'){ mes = 'Aug' }\n      //   if(month == '09'){ mes = 'Sept' }\n      //   if(month == '10'){ mes = 'Oct' }\n      //   if(month == '11'){ mes = 'Nov' }\n      //  if(month == '12'){ mes = 'Dec' }        \n   \n   \n     day = day.length == 1 ? \n         day.padStart('2', '0') : day;\n   \n     // Printing the present date \n     return(`${day}/${month}/${year}`);\n     }\n       \n     function deleteItem(props){\n    store.editando = false\n    store.cadastroProduto.ID=0\n    \n    var data =   {\"ID\" : props.ID}  \n\n                var config = {\n                method: 'delete',\n                maxBodyLength: Infinity,\n                url:  store.baseApiHTTPS+'/vendas/'+props.ID,\n                headers: { \n                    'Content-Type': 'application/json'\n                },\n                data : data\n                };\n\n                axios(config)\n                .then(function (response) {\n                console.log(JSON.stringify(response.data));\n                bind_data()\n                })\n                .catch(function (error) {\n                console.log(error);\n                });\n\n }\n       \n   </script>\n\n<style>    \n \n.conteudo { \n    flex-direction: row;\n    /* justify-content: center; */\n    align-items: center;\n    width: 100%;\n    overflow-x: auto;\n}\n\n</style>"]},"metadata":{},"sourceType":"module"}