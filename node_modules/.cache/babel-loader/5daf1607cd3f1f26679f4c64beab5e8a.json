{"ast":null,"code":"import { createI18n } from 'vue-i18n';\n\nfunction loadLocaleMessages() {\n  const locales = require.context('./locales', true, /[A-Za-z0-9-_,\\s]+\\.json$/i);\n\n  const messages = {};\n  locales.keys().forEach(key => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\n\nexport default createI18n({\n  allowComposition: true,\n  locale: 'en',\n  fallbackLocale: 'en',\n  messages: loadLocaleMessages()\n});","map":{"version":3,"names":["createI18n","loadLocaleMessages","locales","require","context","messages","keys","forEach","key","matched","match","length","locale","allowComposition","fallbackLocale"],"sources":["/home/renato/projetos/pdvsmart/src/i18n.js"],"sourcesContent":["import { createI18n } from 'vue-i18n';\n\nfunction loadLocaleMessages() {\n    const locales = require.context('./locales', true, /[A-Za-z0-9-_,\\s]+\\.json$/i);\n    const messages = {};\n    locales.keys().forEach((key) => {\n        const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n        if (matched && matched.length > 1) {\n            const locale = matched[1];\n            messages[locale] = locales(key);\n        }\n    });\n    return messages;\n}\n\nexport default createI18n({\n    allowComposition: true,\n    locale: 'en',\n    fallbackLocale: 'en',\n    messages: loadLocaleMessages(),\n});\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;;AAEA,SAASC,kBAAT,GAA8B;EAC1B,MAAMC,OAAO,GAAGC,OAAO,CAACC,OAAR,CAAgB,WAAhB,EAA6B,IAA7B,EAAmC,2BAAnC,CAAhB;;EACA,MAAMC,QAAQ,GAAG,EAAjB;EACAH,OAAO,CAACI,IAAR,GAAeC,OAAf,CAAwBC,GAAD,IAAS;IAC5B,MAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAU,qBAAV,CAAhB;;IACA,IAAID,OAAO,IAAIA,OAAO,CAACE,MAAR,GAAiB,CAAhC,EAAmC;MAC/B,MAAMC,MAAM,GAAGH,OAAO,CAAC,CAAD,CAAtB;MACAJ,QAAQ,CAACO,MAAD,CAAR,GAAmBV,OAAO,CAACM,GAAD,CAA1B;IACH;EACJ,CAND;EAOA,OAAOH,QAAP;AACH;;AAED,eAAeL,UAAU,CAAC;EACtBa,gBAAgB,EAAE,IADI;EAEtBD,MAAM,EAAE,IAFc;EAGtBE,cAAc,EAAE,IAHM;EAItBT,QAAQ,EAAEJ,kBAAkB;AAJN,CAAD,CAAzB"},"metadata":{},"sourceType":"module"}