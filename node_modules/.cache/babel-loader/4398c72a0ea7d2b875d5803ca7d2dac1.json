{"ast":null,"code":"import { indexStore, useUserStore } from '../../store/indexStore';\nimport axios from 'axios';\nexport default {\n  __name: 'ListagemProdVenda',\n\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    const store = indexStore();\n    const storeLogin = useUserStore();\n    store.CaixaProdutos.QTDE = 1;\n    store.CaixaProdutos.DESCONTO = 0;\n    store.VendaEnviada = false;\n    store.formaPagamento = false;\n    store.produtos = [];\n    store.produtoSearch = '';\n    const produtos = [];\n    store.tipoVenda = 'NORMAL';\n\n    const getProdutos = async () => {\n      let data = JSON.stringify({\n        \"SCHEMA\": storeLogin.empresas?.schema\n      });\n      let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: store.baseApiHTTPS + '/getProdutos',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        data: data\n      };\n      axios.request(config).then(response => {\n        console.log(JSON.stringify(response.data));\n      }).catch(error => {\n        console.log(error);\n      });\n      const result = await axios.get(store.baseApiHTTPS + '/getProdutos');\n      result.data.map(x => {\n        const itens = {\n          ID: x.id,\n          CATEGORIA: x.categoria,\n          CODIGO_BARRAS: x.codigo_barras,\n          DESCRICAO: x.descricao,\n          FOTO: x.foto,\n          NOME: x.nome,\n          SITUACAO: x.situacao,\n          VALOR: x.valor,\n          VALOR_CUSTO: x.valor_custo,\n          QTDE_ESTOQUE: x.qtde_estoque\n        };\n        produtos.push(itens);\n        store.produtos.push(itens);\n      });\n    };\n\n    getProdutos();\n    store.formasPagamentos = [];\n\n    const getFormasPagamentos = async () => {\n      const result = await axios.get(store.baseApiHTTPS + '/formapagamento');\n      result.data.map(x => {\n        const itens = {\n          ID: x.id,\n          DESCRICAO: x.descricao,\n          TAXA: x.taxa\n        };\n        store.formasPagamentos.push(itens);\n      });\n    };\n\n    getFormasPagamentos();\n\n    const deleteItem = index => {\n      console.log(index);\n      store.CaixaProdutos.splice(index, 1);\n      somaCaixa();\n    };\n\n    var incluirProduto = codProduto => {\n      console.log(codProduto);\n\n      const ItemSelectCaixa = p => p.CODIGO_BARRAS == codProduto;\n\n      const item = produtos.filter(ItemSelectCaixa);\n      console.log(item);\n\n      if (item[0]?.CODIGO_BARRAS == codProduto) {\n        store.CaixaProdutos.push({\n          COD_PRODUTO: codProduto,\n          NOME: item[0]?.NOME,\n          QTDE: store.CaixaProdutos.QTDE,\n          VALOR: item[0]?.VALOR * store.CaixaProdutos.QTDE,\n          DESCONTO: store.CaixaProdutos.DESCONTO,\n          CUSTO: item[0]?.VALOR_CUSTO * store.CaixaProdutos.QTDE\n        });\n        somaCaixa();\n        store.CaixaProdutos.QTDE = 1;\n        store.CaixaProdutos.DESCONTO = 0;\n      }\n    };\n\n    function somaCaixa() {\n      var somarProduto = store.CaixaProdutos.map(p => {\n        return p.VALOR - p.DESCONTO;\n      });\n      let totalProd = 0;\n\n      for (let i in somarProduto) {\n        totalProd += somarProduto[i];\n      }\n\n      store.somaCaixa = totalProd;\n      return totalProd;\n    }\n\n    const addVenda = async () => {\n      if (store.CaixaProdutos.length > 0 && store.formaPagamento) {\n        var data = {\n          COD_CLIENTE: 999,\n          COD_ENDERECO: 1,\n          VALOR: store.somaCaixa,\n          TROCO: store.vendaCaixa.valorTroco,\n          DESCONTO: store.vendaCaixa.descontos,\n          ITENS: store.CaixaProdutos,\n          FORMA_PGTO: store.formaPagamento,\n          TIPO_VENDA: store.tipoVenda\n        };\n        console.log(data);\n        var config = {\n          method: 'post',\n          maxBodyLength: Infinity,\n          url: store.baseApiHTTPS + '/vendas',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: data\n        };\n        store.VendaEnviada = true;\n        axios(config).then(function (response) {\n          console.log(JSON.stringify(response.data));\n          store.CaixaProdutos = [];\n          window.location.href = window.location.href;\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    const __returned__ = {\n      store,\n      storeLogin,\n      produtos,\n      getProdutos,\n      getFormasPagamentos,\n      deleteItem,\n\n      get incluirProduto() {\n        return incluirProduto;\n      },\n\n      set incluirProduto(v) {\n        incluirProduto = v;\n      },\n\n      somaCaixa,\n      addVenda,\n\n      get indexStore() {\n        return indexStore;\n      },\n\n      get useUserStore() {\n        return useUserStore;\n      },\n\n      get axios() {\n        return axios;\n      }\n\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAiLA,SAAQA,UAAR,EAAoBC,YAApB,QAAuC,wBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;;;;IACA,MAAMC,KAAK,GAAGH,UAAU,EAAxB;IACA,MAAMI,UAAU,GAAGH,YAAY,EAA/B;IAEAE,KAAK,CAACE,aAAN,CAAoBC,IAApB,GAA2B,CAA3B;IACAH,KAAK,CAACE,aAAN,CAAoBE,QAApB,GAA6B,CAA7B;IACAJ,KAAK,CAACK,YAAN,GAAqB,KAArB;IACAL,KAAK,CAACM,cAAN,GAAuB,KAAvB;IACAN,KAAK,CAACO,QAAN,GAAiB,EAAjB;IACAP,KAAK,CAACQ,aAAN,GAAsB,EAAtB;IACA,MAAMD,QAAQ,GAAG,EAAjB;IACAP,KAAK,CAACS,SAAN,GAAkB,QAAlB;;IAEA,MAAMC,WAAW,GAAI,YAAY;MAC/B,IAAIC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;QAC1B,UAAUZ,UAAU,CAACa,QAAX,EAAqBC;MADL,CAAf,CAAX;MAIE,IAAIC,MAAM,GAAG;QACXC,MAAM,EAAE,MADG;QAEXC,aAAa,EAAEC,QAFJ;QAGXC,GAAG,EAAEpB,KAAK,CAACqB,YAAN,GAAmB,cAHb;QAIXC,OAAO,EAAE;UACP,gBAAgB;QADT,CAJE;QAOXX,IAAI,EAAGA;MAPI,CAAb;MAUAZ,KAAK,CAACwB,OAAN,CAAcP,MAAd,EACCQ,IADD,CACOC,QAAD,IAAc;QAClBC,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACC,SAAL,CAAeY,QAAQ,CAACd,IAAxB,CAAZ;MACD,CAHD,EAICiB,KAJD,CAIQC,KAAD,IAAW;QAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACD,CAND;MAYF,MAAMC,MAAM,GAAG,MAAM/B,KAAK,CAACgC,GAAN,CAAU/B,KAAK,CAACqB,YAAN,GAAmB,cAA7B,CAArB;MACAS,MAAM,CAACnB,IAAP,CAAYqB,GAAZ,CAAgBC,CAAC,IAAG;QACd,MAAMC,KAAK,GAAE;UACTC,EAAE,EAAEF,CAAC,CAACG,EADG;UAETC,SAAS,EAAEJ,CAAC,CAACK,SAFJ;UAGTC,aAAa,EAAEN,CAAC,CAACO,aAHR;UAITC,SAAS,EAAER,CAAC,CAACS,SAJJ;UAKTC,IAAI,EAAEV,CAAC,CAACW,IALC;UAMTC,IAAI,EAAEZ,CAAC,CAACa,IANC;UAOTC,QAAQ,EAAEd,CAAC,CAACe,QAPH;UAQTC,KAAK,EAAEhB,CAAC,CAACiB,KARA;UASTC,WAAW,EAAElB,CAAC,CAACmB,WATN;UAUTC,YAAY,EAAEpB,CAAC,CAACqB;QAVP,CAAb;QAYD/C,QAAQ,CAACgD,IAAT,CAAcrB,KAAd;QACAlC,KAAK,CAACO,QAAN,CAAegD,IAAf,CAAoBrB,KAApB;MACC,CAfN;IAiBC,CA7CH;;IA+CCxB,WAAW;IAEXV,KAAK,CAACwD,gBAAN,GAAyB,EAAzB;;IAEA,MAAMC,mBAAmB,GAAI,YAAY;MACxC,MAAM3B,MAAM,GAAG,MAAM/B,KAAK,CAACgC,GAAN,CAAU/B,KAAK,CAACqB,YAAN,GAAmB,iBAA7B,CAArB;MACAS,MAAM,CAACnB,IAAP,CAAYqB,GAAZ,CAAgBC,CAAC,IAAG;QACd,MAAMC,KAAK,GAAE;UACTC,EAAE,EAAEF,CAAC,CAACG,EADG;UAETK,SAAS,EAAER,CAAC,CAACS,SAFJ;UAGTgB,IAAI,EAAEzB,CAAC,CAAC0B;QAHC,CAAb;QAKD3D,KAAK,CAACwD,gBAAN,CAAuBD,IAAvB,CAA4BrB,KAA5B;MACC,CAPN;IASC,CAXF;;IAaCuB,mBAAmB;;IAGpB,MAAMG,UAAU,GAAIC,KAAD,IAAW;MAC3BnC,OAAO,CAACC,GAAR,CAAYkC,KAAZ;MACA7D,KAAK,CAACE,aAAN,CAAoB4D,MAApB,CAA2BD,KAA3B,EAAkC,CAAlC;MACAE,SAAS;IACX,CAJD;;IAOD,IAAIC,cAAc,GAAIC,UAAD,IAAgB;MACpCvC,OAAO,CAACC,GAAR,CAAYsC,UAAZ;;MAEC,MAAMC,eAAe,GAAGC,CAAC,IAAIA,CAAC,CAAC5B,aAAF,IAAmB0B,UAAhD;;MACA,MAAMG,IAAI,GAAI7D,QAAQ,CAAC8D,MAAT,CAAgBH,eAAhB,CAAd;MAEFxC,OAAO,CAACC,GAAR,CAAYyC,IAAZ;;MACE,IAAIA,IAAI,CAAC,CAAD,CAAJ,EAAS7B,aAAT,IAA0B0B,UAA9B,EAA0C;QACxCjE,KAAK,CAACE,aAAN,CAAoBqD,IAApB,CAAyB;UACbe,WAAW,EAAEL,UADA;UAEbpB,IAAI,EAAEuB,IAAI,CAAC,CAAD,CAAJ,EAASvB,IAFF;UAGb1C,IAAI,EAAEH,KAAK,CAACE,aAAN,CAAoBC,IAHb;UAIb8C,KAAK,EAAEmB,IAAI,CAAC,CAAD,CAAJ,EAASnB,KAAT,GAAiBjD,KAAK,CAACE,aAAN,CAAoBC,IAJ/B;UAKbC,QAAQ,EAAEJ,KAAK,CAACE,aAAN,CAAoBE,QALjB;UAMbmE,KAAK,EAAGH,IAAI,CAAC,CAAD,CAAJ,EAASjB,WAAT,GAAuBnD,KAAK,CAACE,aAAN,CAAoBC;QANtC,CAAzB;QAUA4D,SAAS;QACR/D,KAAK,CAACE,aAAN,CAAoBC,IAApB,GAAyB,CAAzB;QACDH,KAAK,CAACE,aAAN,CAAoBE,QAApB,GAA6B,CAA7B;MAED;IAGF,CAzBD;;IA4BA,SAAS2D,SAAT,GAAqB;MACnB,IAAIS,YAAY,GAAGxE,KAAK,CAACE,aAAN,CAAoB8B,GAApB,CAAwBmC,CAAC,IAAG;QACjC,OAAQA,CAAC,CAAClB,KAAF,GAAUkB,CAAC,CAAC/D,QAApB;MACD,CAFM,CAAnB;MAIA,IAAIqE,SAAS,GAAG,CAAhB;;MACA,KAAI,IAAIC,CAAR,IAAaF,YAAb,EAA2B;QAClBC,SAAS,IAAID,YAAY,CAACE,CAAD,CAAzB;MACA;;MACD1E,KAAK,CAAC+D,SAAN,GAAkBU,SAAlB;MACA,OAAOA,SAAP;IACT;;IAGA,MAAME,QAAQ,GAAG,YAAY;MAC5B,IAAI3E,KAAK,CAACE,aAAN,CAAoB0E,MAApB,GAA6B,CAA7B,IAAmC5E,KAAK,CAACM,cAA7C,EAA6D;QAG/D,IAAIK,IAAI,GAAG;UACLkE,WAAW,EAAE,GADR;UAELC,YAAY,EAAE,CAFT;UAGL7B,KAAK,EAAEjD,KAAK,CAAC+D,SAHR;UAILgB,KAAK,EAAE/E,KAAK,CAACgF,UAAN,CAAiBC,UAJnB;UAKL7E,QAAQ,EAAEJ,KAAK,CAACgF,UAAN,CAAiBE,SALtB;UAMLC,KAAK,EAAEnF,KAAK,CAACE,aANR;UAOLkF,UAAU,EAAEpF,KAAK,CAACM,cAPb;UAQL+E,UAAU,EAAErF,KAAK,CAACS;QARb,CAAX;QAWAiB,OAAO,CAACC,GAAR,CAAYhB,IAAZ;QAEA,IAAIK,MAAM,GAAG;UACXC,MAAM,EAAE,MADG;UAEXC,aAAa,EAAEC,QAFJ;UAGXC,GAAG,EAAEpB,KAAK,CAACqB,YAAN,GAAmB,SAHb;UAIXC,OAAO,EAAE;YACP,gBAAgB;UADT,CAJE;UAOXX,IAAI,EAAGA;QAPI,CAAb;QAUAX,KAAK,CAACK,YAAN,GAAmB,IAAnB;QAEAN,KAAK,CAACiB,MAAD,CAAL,CACCQ,IADD,CACM,UAAUC,QAAV,EAAoB;UACxBC,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACC,SAAL,CAAeY,QAAQ,CAACd,IAAxB,CAAZ;UACAX,KAAK,CAACE,aAAN,GAAsB,EAAtB;UACAoF,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBF,MAAM,CAACC,QAAP,CAAgBC,IAAvC;QACD,CALD,EAMC5D,KAND,CAMO,UAAUC,KAAV,EAAiB;UACtBH,OAAO,CAACC,GAAR,CAAYE,KAAZ;QACD,CARD;MAWC;IAAC,CAxCD","names":["indexStore","useUserStore","axios","store","storeLogin","CaixaProdutos","QTDE","DESCONTO","VendaEnviada","formaPagamento","produtos","produtoSearch","tipoVenda","getProdutos","data","JSON","stringify","empresas","schema","config","method","maxBodyLength","Infinity","url","baseApiHTTPS","headers","request","then","response","console","log","catch","error","result","get","map","x","itens","ID","id","CATEGORIA","categoria","CODIGO_BARRAS","codigo_barras","DESCRICAO","descricao","FOTO","foto","NOME","nome","SITUACAO","situacao","VALOR","valor","VALOR_CUSTO","valor_custo","QTDE_ESTOQUE","qtde_estoque","push","formasPagamentos","getFormasPagamentos","TAXA","taxa","deleteItem","index","splice","somaCaixa","incluirProduto","codProduto","ItemSelectCaixa","p","item","filter","COD_PRODUTO","CUSTO","somarProduto","totalProd","i","addVenda","length","COD_CLIENTE","COD_ENDERECO","TROCO","vendaCaixa","valorTroco","descontos","ITENS","FORMA_PGTO","TIPO_VENDA","window","location","href"],"sources":["/home/renato/projetos/pdvsmart/src/views/pdv/ListagemProdVenda.vue"],"sourcesContent":["<template> \n \n \n<div style=\"display: flex; \n        justify-content: space-between; font-size: 40px; \">\n\n<div \nstyle=\"   padding: 5px; \n          margin-left: -25px;\n          max-width: 400px; \n          font-size: 20px;\">\n\n  <input style=\"max-width: 100%; max-height: 50px;\"\n          type=\"text\" v-model=\"store.produtoSearch\" placeholder=\"Busca Item...\"/> \n  \n  <div\n  class=\"conteudo\"\n  style=\"  height: 60.5vh; \"\n  >\n  <div v-if=\"store.produtoSearch == ''\"> \n    <img \n      style=\"width: 330px; height: 350px;    \"  \n      src=\"https://cdn-icons-png.flaticon.com/512/8146/8146003.png\"\n      class=\"lazy\" alt=\"\">\n  </div> \n\n   <div v-if=\"store.produtoSearch != ''\"   style=\" font-size: 17px;  color: black;\"    \n    v-for=\" (p,index) in store.produtos.filter(f => f.SITUACAO=='ATIVADO').filter(b => b.NOME.toLowerCase().includes(store.produtoSearch.toLocaleLowerCase()))\" :key=\"index\"\n    > \n    \n      <div  style=\"display: flex; \n           justify-content: space-between;  \" \n          @click=\"incluirProduto(p.CODIGO_BARRAS)\" \n          >\n       <div>{{ p.NOME }}</div> \n       <div>R$  {{ store.formataDinheiro(p.VALOR)}} </div>  \n      </div> \n   \n    </div>\n  </div>\n  \n  \n  \n\n</div> \n  \n\n   \n  <div class=\"conteudo\"\n   style=\"background-color: white;  \n              min-width: 70%; \n              height: 77.0vh;\n              padding-right: 0px;\">\n    <div style=\"display: flex;  \n        justify-content: space-between;  \n        \"  \n        v-for=\" (p,index) in store.CaixaProdutos\" :key=\"index\"\n        >\n \n        <div>{{p.QTDE}} </div>\n        <div>{{p.NOME}}</div>\n     \n    <div style=\"font-size: 40px;  \">\n       R$ {{store.formataDinheiro(p.VALOR,2)  }}\n    </div>\n\n    <div style=\" \">\n      <svg \n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        class=\"feather feather-trash-2 icon\"\n                        @click=\"deleteItem(index)\"\n                    >\n                        <polyline points=\"3 6 5 6 21 6\"></polyline>\n                        <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path>\n                        <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line>\n                        <line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line>\n                    </svg>\n    </div>\n    \n    \n  </div> \n \n  <div style=\"font-size: 30px; \">\nQtde: \n<input    type=\"number\" \n          ref=\"myinput\"\n          style=\"width: 80px;\"\n          v-focus\n          v-model=\"store.CaixaProdutos.QTDE\" \n          placeholder=\"novo produto\"\n               \n  />\n  Desconto\n  <input    type=\"number\" \n          ref=\"myinput\"\n          style=\"width: 100px;\"\n          v-focus\n          v-model=\"store.CaixaProdutos.DESCONTO\" \n          placeholder=\"novo produto\"\n               \n  />\n Codigo de Barras\n<input     type=\"text\" \n              ref=\"myinput\"\n              v-focus\n              style=\"width: 200px;\"\n              :value='store.CaixaProdutos.codProduto' \n              @input='evt=>incluirProduto(evt.target.value)'\n              placeholder=\"novo produto\"\n               \n  />\n\n\n</div>\n    <div \n       style=\"background-color: rgb(0, 132, 255); color: rgb(3, 0, 0); \n              padding: 10px; text-align: center; display: flex;\n              margin: 10px;\n              justify-content: center;\n              font-size: 20px;\n              \" \n      v-if=\"store.recursos.telaCaixaConfirmar\">\n\n \n\n      <div>\n       <select v-model=\"store.formaPagamento\">\n        <option v-for=\"pg, indexPg in store.formasPagamentos\" :key=\"indexPg\"\n                :value=\"pg.ID\">  \n          {{pg.DESCRICAO}}\n        </option> \n       </select>\n      </div>\n\n \n    <div>\n      Valor do Dinheiro: <input style=\"text-align: center;width: 70px; padding: 5px;\" v-model=\"store.vendaCaixa.valorPago\"  \n                          type=\"number\" \n                          placeholder=\"valor Dinheiro\">  \n    </div> \n\n    <div style=\"font-size: 23px; padding: 5px;\" v-if=\"store.vendaCaixa.valorPago > 0\">\n      TROCO: {{store.formataDinheiro(store.vendaCaixa.valorPago - somaCaixa(),2) }}\n    </div>\n\n    <div style=\"padding:8px;\">\n      <button @click=\"addVenda\">VENDER</button>\n    </div>\n   \n   \n  </div>\n\n  </div>\n\n  \n\n</div>\n \n\n\n  \n\n  \n  \n\n</template>\n\n<script setup>\n \nimport {indexStore, useUserStore} from '../../store/indexStore' \nimport axios from 'axios'\nconst store = indexStore(); \nconst storeLogin = useUserStore();\n\nstore.CaixaProdutos.QTDE = 1\nstore.CaixaProdutos.DESCONTO=0\nstore.VendaEnviada = false\nstore.formaPagamento = false\nstore.produtos = []\nstore.produtoSearch = ''\nconst produtos = [ ]\nstore.tipoVenda = 'NORMAL'\n \nconst getProdutos = (async () => { \n  let data = JSON.stringify({\n  \"SCHEMA\": storeLogin.empresas?.schema\n    });\n\n    let config = {\n      method: 'post',\n      maxBodyLength: Infinity,\n      url: store.baseApiHTTPS+'/getProdutos',\n      headers: { \n        'Content-Type': 'application/json'\n      },\n      data : data\n    };\n\n    axios.request(config)\n    .then((response) => {\n      console.log(JSON.stringify(response.data));\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n\n\n\n\n  const result = await axios.get(store.baseApiHTTPS+'/getProdutos') \n  result.data.map(x=> {\n        const itens ={\n            ID: x.id,\n            CATEGORIA: x.categoria,\n            CODIGO_BARRAS: x.codigo_barras,\n            DESCRICAO: x.descricao,\n            FOTO: x.foto,\n            NOME: x.nome,\n            SITUACAO: x.situacao,\n            VALOR: x.valor,\n            VALOR_CUSTO: x.valor_custo,\n            QTDE_ESTOQUE: x.qtde_estoque\n       }\n       produtos.push(itens)\n       store.produtos.push(itens)\n       })\n        \n  })\n \n getProdutos()\n\n store.formasPagamentos = [ ]\n\n const getFormasPagamentos = (async () => { \n  const result = await axios.get(store.baseApiHTTPS+'/formapagamento') \n  result.data.map(x=> {\n        const itens ={\n            ID: x.id, \n            DESCRICAO: x.descricao,\n            TAXA: x.taxa            \n       }\n       store.formasPagamentos.push(itens)\n       })\n        \n  })\n \n  getFormasPagamentos()\n\n \n const deleteItem = (index) => {\n    console.log(index)\n    store.CaixaProdutos.splice(index, 1);\n    somaCaixa() \n }\n \n \nvar incluirProduto = (codProduto) => {\n console.log(codProduto)\n \n  const ItemSelectCaixa = p => p.CODIGO_BARRAS == codProduto\n  const item  = produtos.filter(ItemSelectCaixa)\n  \nconsole.log(item)\n  if (item[0]?.CODIGO_BARRAS == codProduto) { \n    store.CaixaProdutos.push({\n                COD_PRODUTO: codProduto,\n                NOME: item[0]?.NOME,\n                QTDE: store.CaixaProdutos.QTDE,\n                VALOR: item[0]?.VALOR * store.CaixaProdutos.QTDE,\n                DESCONTO: store.CaixaProdutos.DESCONTO,\n                CUSTO:  item[0]?.VALOR_CUSTO * store.CaixaProdutos.QTDE               \n    })\n   \n    \n    somaCaixa() \n     store.CaixaProdutos.QTDE=1\n    store.CaixaProdutos.DESCONTO=0\n   \n  }\n\n    \n}\n\n\nfunction somaCaixa() {\n  var somarProduto = store.CaixaProdutos.map(p =>{\n                return (p.VALOR - p.DESCONTO)\n              } )\n\n  let totalProd = 0\n  for(let i in somarProduto) {\n           totalProd += somarProduto[i] \n          }\n          store.somaCaixa = totalProd\n          return totalProd\n}\n \n\n const addVenda = async () => {\n  if (store.CaixaProdutos.length > 0 &&  store.formaPagamento) { \n \n   \nvar data = {   \n      COD_CLIENTE: 999,\n      COD_ENDERECO: 1,    \n      VALOR: store.somaCaixa,\n      TROCO: store.vendaCaixa.valorTroco, \n      DESCONTO: store.vendaCaixa.descontos,\n      ITENS: store.CaixaProdutos,\n      FORMA_PGTO: store.formaPagamento,\n      TIPO_VENDA: store.tipoVenda\n    }\n\nconsole.log(data)\n\nvar config = {\n  method: 'post',\n  maxBodyLength: Infinity,\n  url: store.baseApiHTTPS+'/vendas',\n  headers: { \n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\nstore.VendaEnviada=true\n\naxios(config)\n.then(function (response) {\n  console.log(JSON.stringify(response.data));\n  store.CaixaProdutos = []\n  window.location.href = window.location.href\n})\n.catch(function (error) {\n  console.log(error);\n});\n\n\n}} \n\n\n</script>\n\n<style>\n  .conteudo {\n    \n    flex-direction: row;\n    /* justify-content: center; */\n    align-items: center;\n    width: 100%;\n    overflow-x: auto;\n}\n</style>"]},"metadata":{},"sourceType":"module"}