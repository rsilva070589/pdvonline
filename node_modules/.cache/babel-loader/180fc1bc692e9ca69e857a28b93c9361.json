{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport '@/assets/sass/widgets/widgets.scss';\nimport { computed, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { indexStore, useUserStore } from '../../store/indexStore';\nimport ApexChart from 'vue3-apexcharts';\nimport { useMeta } from '@/composables/use-meta';\nimport axios from 'axios';\nimport { useRouter } from \"vue-router\";\nimport Progress from '@/components/Progress.vue';\nexport default {\n  __name: 'Dre',\n\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    useMeta({\n      title: 'Relatorios'\n    });\n    const storeLogin = useUserStore();\n    const router = useRouter();\n    const store = indexStore();\n    login();\n    store.carregando = false;\n\n    function login() {\n      switch (storeLogin.empresas?.sucess) {\n        case true:\n          console.log('usuario logado');\n          break;\n\n        case 'true':\n          console.log('usuario logado');\n          break;\n\n        default:\n          console.log('precisa fazer login');\n          router.push('/auth/login');\n      }\n    }\n\n    function logout() {\n      storeLogin.empresas.sucess = false;\n      console.log(storeLogin.empresas.sucess);\n      router.push('/auth/login');\n    }\n\n    store.filtro = {\n      empresa: 'CENTRAL',\n      dataInicial: dataFormatada(new Date()),\n      dataFinal: dataFormatada(new Date())\n    };\n\n    function filtros() {\n      if (storeLogin.empresas?.sucess) {\n        store.relLoja = [];\n        store.relVendedores = [];\n        store.relAnual = [];\n        store.relContas = [];\n        store.Progress = true;\n        getTypeRel(storeLogin.empresas.databasecliente, store.filtro.empresa, store.filtro.dataInicial, store.filtro.dataFinal, 8);\n      }\n    }\n\n    filtros();\n\n    function compare(a, b) {\n      if (a.quantidadevenda > b.quantidadevenda) {\n        return -1;\n      }\n\n      if (a.quantidadevenda < b.quantidadevenda) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    async function getTypeRel(DataBaseCliente, ComboEmpresas, DataInicial, DataFinal, TypeRel) {\n      let data = JSON.stringify({\n        \"databasecliente\": DataBaseCliente,\n        \"comboempresas\": ComboEmpresas,\n        \"datainicial\": DataInicial,\n        \"datafinal\": DataFinal,\n        \"typerel\": TypeRel\n      });\n      console.log('TypeRel: ' + TypeRel + ' DataInicial: ' + DataInicial + ' DataInicial: ' + DataFinal);\n      let config = {\n        method: 'post',\n        maxBodyLength: Infinity,\n        url: store.ulrprincipal + '/evento/report',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Basic dGVzdHNlcnZlcjp0ZXN0c2VydmVy'\n        },\n        data: data\n      };\n      await axios.request(config).then(response => {\n        if (TypeRel == 1) {\n          store.relLoja = response.data.dados;\n        }\n\n        if (store.detectar_mobile()) {\n          window.scrollTo(0, 300);\n          console.log('window.scrollTo');\n        }\n\n        store.Progress = false;\n        return response;\n      }).catch(error => {\n        console.log(error);\n        store.Progress = false;\n      });\n    }\n\n    function dataFormatada(d) {\n      var data = new Date(d),\n          dia = data.getDate().toString(),\n          diaF = dia.length == 1 ? '0' + dia : dia,\n          mes = (data.getMonth() + 1).toString(),\n          //+1 pois no getMonth Janeiro começa com zero.\n      mesF = mes.length == 1 ? '0' + mes : mes,\n          anoF = data.getFullYear();\n      return anoF + \"-\" + mesF + \"-\" + diaF;\n    }\n\n    function somaValor(array) {\n      if (array) {\n        var arr = array;\n        var sum = 0;\n\n        for (var i = 0; i < arr.length; i++) {\n          sum += arr[i];\n        }\n      }\n\n      return sum;\n    }\n\n    function formataDinheiro(item) {\n      let venda = item;\n\n      if (!!venda && venda.toString().includes(\",\")) {\n        venda = venda.toString().replace(\",\", \".\");\n      }\n\n      return parseFloat(venda).toFixed(2).replace(\".\", \",\").replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n    } //Simple Bar\n    //Simple Bar\n\n\n    const options_5 = computed(() => {\n      return {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          zoom: {\n            enabled: false\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          curve: 'straight'\n        },\n        title: {\n          align: 'left',\n          style: {\n            fontWeight: 'normal'\n          }\n        },\n        grid: {\n          row: {\n            colors: ['#f1f2f3', 'transparent'],\n            opacity: 0.5\n          }\n        },\n        xaxis: {\n          categories: store.relVendedores.map(x => x.loginfuncionario)\n        }\n      };\n    }); //Simple Bar\n    //unique visitors\n\n    const unique_visitor_options = computed(() => {\n      return {\n        chart: {\n          height: 350,\n          type: 'bar'\n        },\n        dataLabels: {\n          enabled: !store.detectar_mobile(),\n          formatter: function (val) {\n            return \"R$ \" + formataDinheiro(val);\n          },\n          offsetY: -20,\n          style: {\n            fontSize: '11px',\n            colors: [\"#888EA8\"]\n          }\n        },\n        colors: ['#5c1ac3'],\n        plotOptions: {\n          bar: {\n            columnWidth: '90%',\n            borderRadius: 0,\n            dataLabels: {\n              position: 'top' // top, center, bottom\n\n            }\n          }\n        },\n        legend: {\n          position: 'bottom',\n          horizontalAlign: 'center',\n          fontSize: '14px',\n          markers: {\n            width: 12,\n            height: 12\n          },\n          itemMargin: {\n            horizontal: 7,\n            vertical: 8\n          }\n        },\n        grid: {\n          borderColor: '#e0e6ed'\n        },\n        xaxis: {\n          categories: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n          axisBorder: {\n            show: true,\n            color: '#e0e6ed'\n          }\n        },\n        yaxis: {\n          tickAmount: 6\n        },\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shade: 'light',\n            type: 'vertical',\n            shadeIntensity: 0.3,\n            inverseColors: false,\n            opacityFrom: 1,\n            opacityTo: 0.8,\n            stops: [0, 100]\n          }\n        },\n        tooltip: {\n          theme: 'light',\n          y: {\n            formatter: function (val) {\n              return val;\n            }\n          }\n        }\n      };\n    }); // vendas por empresa\n\n    const chartOptions = computed(() => {\n      return {\n        chart: {\n          height: 350,\n          type: 'bar',\n          events: {\n            click: function (chart, w, e) {// console.log(chart, w, e)\n            }\n          }\n        },\n        colors: ['#5c1ac3', '#ffbb44', '#A52A2A', '#5F9EA0', '#8B008B', '#483D8B', '#2F4F4F', '#DCDCDC'],\n        plotOptions: {\n          bar: {\n            columnWidth: '80%',\n            distributed: true\n          }\n        },\n        dataLabels: {\n          enabled: !store.detectar_mobile(),\n          formatter: function (val) {\n            return \"R$ \" + formataDinheiro(val);\n          },\n          offsetY: -20,\n          style: {\n            fontSize: '11px',\n            colors: [\"#888EA8\"]\n          }\n        },\n        legend: {\n          show: false\n        },\n        plotOptions: {\n          bar: {\n            columnWidth: '80%',\n            distributed: true,\n            borderRadius: 0,\n            dataLabels: {\n              position: 'top' // top, center, bottom\n\n            }\n          }\n        },\n        xaxis: {\n          categories: store.relLoja.map(x => x.identificacaointegracao)\n        }\n      };\n    }); //Statistics\n\n    const total_visit_series = ref([{\n      data: [21, 9, 36, 12, 44, 25, 59, 41, 66, 25]\n    }]);\n    const total_visit_options = computed(() => {\n      return {\n        chart: {\n          sparkline: {\n            enabled: true\n          },\n          dropShadow: {\n            enabled: true,\n            top: 3,\n            left: 1,\n            blur: 3,\n            color: '#009688',\n            opacity: 0.7\n          }\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        markers: {\n          size: 0\n        },\n        colors: ['#009688'],\n        grid: {\n          padding: {\n            top: 0,\n            bottom: 0,\n            left: 0\n          }\n        },\n        tooltip: {\n          theme: 'light',\n          x: {\n            show: false\n          },\n          y: {\n            title: {\n              formatter: function formatter() {\n                return '';\n              }\n            }\n          }\n        },\n        responsive: [{\n          breakPoint: 576,\n          options: {\n            chart: {\n              height: 95\n            },\n            grid: {\n              padding: {\n                top: 45,\n                bottom: 0,\n                left: 0\n              }\n            }\n          }\n        }]\n      };\n    });\n    const paid_visit_series = ref([{\n      data: [22, 19, 30, 47, 32, 44, 34, 55, 41, 69]\n    }]);\n    const paid_visit_options = computed(() => {\n      return {\n        chart: {\n          sparkline: {\n            enabled: true\n          },\n          dropShadow: {\n            enabled: true,\n            top: 1,\n            left: 1,\n            blur: 2,\n            color: '#e2a03f',\n            opacity: 0.7\n          }\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 2\n        },\n        markers: {\n          size: 0\n        },\n        colors: ['#e2a03f'],\n        grid: {\n          padding: {\n            top: 0,\n            bottom: 0,\n            left: 0\n          }\n        },\n        tooltip: {\n          theme: 'light',\n          x: {\n            show: false\n          },\n          y: {\n            title: {\n              formatter: function formatter() {\n                return '';\n              }\n            }\n          }\n        },\n        responsive: [{\n          breakPoint: 576,\n          options: {\n            chart: {\n              height: 95\n            },\n            grid: {\n              padding: {\n                top: 35,\n                bottom: 0,\n                left: 0\n              }\n            }\n          }\n        }]\n      };\n    });\n    const options_7 = computed(() => {\n      return {\n        chart: {\n          toolbar: {\n            show: false\n          }\n        },\n        colors: ['#2a37ff', '#ffa500', '#ff2717'],\n        labels: ['Pagas', 'A Vencer', 'Vencidas'],\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              position: 'bottom'\n            }\n          }\n        }]\n      };\n    });\n    const __returned__ = {\n      storeLogin,\n      router,\n      store,\n      login,\n      logout,\n      filtros,\n      compare,\n      getTypeRel,\n      dataFormatada,\n      somaValor,\n      formataDinheiro,\n      options_5,\n      unique_visitor_options,\n      chartOptions,\n      total_visit_series,\n      total_visit_options,\n      paid_visit_series,\n      paid_visit_options,\n      options_7,\n      computed,\n      ref,\n\n      get useStore() {\n        return useStore;\n      },\n\n      get indexStore() {\n        return indexStore;\n      },\n\n      get useUserStore() {\n        return useUserStore;\n      },\n\n      get ApexChart() {\n        return ApexChart;\n      },\n\n      get useMeta() {\n        return useMeta;\n      },\n\n      get axios() {\n        return axios;\n      },\n\n      get useRouter() {\n        return useRouter;\n      },\n\n      Progress\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["computed","ref","useStore","indexStore","useUserStore","ApexChart","useMeta","axios","useRouter","Progress","title","storeLogin","router","store","login","carregando","empresas","sucess","console","log","push","logout","filtro","empresa","dataInicial","dataFormatada","Date","dataFinal","filtros","relLoja","relVendedores","relAnual","relContas","getTypeRel","databasecliente","compare","a","b","quantidadevenda","DataBaseCliente","ComboEmpresas","DataInicial","DataFinal","TypeRel","data","JSON","stringify","config","method","maxBodyLength","Infinity","url","ulrprincipal","headers","request","then","response","dados","detectar_mobile","window","scrollTo","catch","error","d","dia","getDate","toString","diaF","length","mes","getMonth","mesF","anoF","getFullYear","somaValor","array","arr","sum","i","formataDinheiro","item","venda","includes","replace","parseFloat","toFixed","options_5","chart","toolbar","show","zoom","enabled","dataLabels","stroke","curve","align","style","fontWeight","grid","row","colors","opacity","xaxis","categories","map","x","loginfuncionario","unique_visitor_options","height","type","formatter","val","offsetY","fontSize","plotOptions","bar","columnWidth","borderRadius","position","legend","horizontalAlign","markers","width","itemMargin","horizontal","vertical","borderColor","axisBorder","color","yaxis","tickAmount","fill","gradient","shade","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","tooltip","theme","y","chartOptions","events","click","w","e","distributed","identificacaointegracao","total_visit_series","total_visit_options","sparkline","dropShadow","top","left","blur","size","padding","bottom","responsive","breakPoint","options","paid_visit_series","paid_visit_options","options_7","labels","breakpoint"],"sources":["/home/renato/projetos/pdvsmart/src/views/relatorios/Dre.vue"],"sourcesContent":["<template> \n \n \n    <div v-if=\"storeLogin.empresas?.sucess == 'true'\"> \n    \n        <div class=\"layout-px-spacing dash_2\">\n            <teleport to=\"#breadcrumb\">\n                <ul class=\"navbar-nav flex-row\">\n                    <li>\n                        <div class=\"page-header\">\n                            <nav class=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                                <ol class=\"breadcrumb\">\n                                    <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Relatorios</a></li>\n                                    <li class=\"breadcrumb-item active\" aria-current=\"page\"><span>Dre</span></li>\n                                </ol>\n                            </nav>\n                        </div>\n                    </li>\n                </ul>\n            </teleport> \n            \n      <div  v-if=\"storeLogin.empresas?.sucess == 'true'\"\n            class=\"row align-items-center form-group \" to=\"#breadcrumb\" >\n            <div class=\"form-group col-md-2\">\n                <label class=\"col-form-label\">Empresa</label>\n                \n                <select   class=\"mb-4 form-control flatpickr active w-100 form-select\"   \n                        v-model=\"store.filtro.empresa\"            \n                        style=\" margin-top: -15px;\"\n                        >\n                        <option \n                        v-for=\"emp, indexEmp in storeLogin.empresas.dadosempresa\"\n                        :key=\"indexEmp\"\n                        :value=\"emp.identificacaointegracao\">{{emp.identificacaointegracao}}\n                        </option>               \n                </select>\n            </div> \n    \n            <div class=\"form-group col-md-2\"\n             v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobile' : 'filtrosWeb'\"\n            \n            >\n                <label class=\"col-form-label\"\n            \n                >Data Inicial</label>              \n                <input type=\"date\" v-model=\"store.filtro.dataInicial\"  data-date-format=\"DD MM YYYY\"\n                class=\"mb-4 form-control flatpickr active w-100\" \n                v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobile' : 'filtrosWeb'\"\n                style=\" margin-top: -15px;\"\n            \n                >\n            </div> \n    \n            <div class=\"form-group col-md-2\"\n                v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobile' : 'filtrosWeb'\"\n            \n            >\n                <label class=\"col-form-label\"\n             \n                >Data Final</label>            \n                <input \n                    type=\"date\" data-date-format=\"DD MM YYYY\" v-model=\"store.filtro.dataFinal\"  \n                    class=\"mb-4 form-control flatpickr active w-100\"\n                    v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobile' : 'filtrosWeb'\"\n                    style=\" margin-top: -15px;\"\n                    > \n                    \n            </div> \n    \n            <div class=\"form-group col-md-2 align-items-center \">    \n               <div class=\"btn btn-primary mb-4 form-control active w-300\" \n                    v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobileButton' : 'filtrosWebButton'\"                \n                    @click=\"filtros()\">\n                   ATUALIZAR\n                </div>\n            </div> \n     \n      </div>\n    \n    <Progress v-if=\"store.Progress && storeLogin.empresas?.sucess == true\"/> \n    \n      <div v-if=\"   !store.relVendedores?.length > 0 \n                 && !store.Progress\n                 && !store.relLoja?.length > 0 \n                 && !store.relAnual?.length > 0 \n                 && !store.relContas?.length > 0 \n                 && !store.relLoja?.length > 0   \n                 \"\n        style=\"text-align: center; font-size: 30px;\"\n        >\n        Sem dados para exibir neste período...\n      </div>\n           \n    \n            \n        </div>\n    </div>    \n    </template>\n     \n    <script setup>\n        import '@/assets/sass/widgets/widgets.scss';\n        import { computed, ref } from 'vue';\n        import { useStore } from 'vuex';\n        import { indexStore, useUserStore } from '../../store/indexStore' \n        import ApexChart from 'vue3-apexcharts';    \n        import { useMeta } from '@/composables/use-meta';\n        import axios from 'axios';\n        import { useRouter } from \"vue-router\"; \n        import Progress from '@/components/Progress.vue';\n        \n        useMeta({ title: 'Relatorios' });\n        const storeLogin = useUserStore()  \n        const router = useRouter() \n        const store = indexStore(); \n        login()\n          \n        store.carregando = false \n    \n    \n    \n        function login (){\n    \n            switch (storeLogin.empresas?.sucess) {\n            case true:\n                console.log('usuario logado')  \n                break;\n            case 'true':\n                console.log('usuario logado')  \n                 break; \n            default:\n                console.log('precisa fazer login')\n                router.push('/auth/login') \n            }\n     \n             \n      }\n    \n      function logout(){ \n        storeLogin.empresas.sucess =false\n        console.log( storeLogin.empresas.sucess ) \n        router.push('/auth/login') \n      }\n    \n       \n    \n        store.filtro= { \n            empresa: 'CENTRAL',\n            dataInicial:  dataFormatada(new Date()),\n            dataFinal:    dataFormatada(new Date())\n        }\n    \n        function filtros(){\n            if(storeLogin.empresas?.sucess){\n                store.relLoja = []\n                store.relVendedores = []\n                store.relAnual = []\n                store.relContas = []\n                store.Progress = true        \n            getTypeRel(storeLogin.empresas.databasecliente,store.filtro.empresa,store.filtro.dataInicial,store.filtro.dataFinal,8)\n            } \n        }\n    \n        filtros()\n        \n        function compare( a, b ) {\n            if ( a.quantidadevenda > b.quantidadevenda ){\n                return -1;\n            }\n            if ( a.quantidadevenda < b.quantidadevenda ){\n                return 1;\n            }\n            return 0;\n            }\n        \n        async function getTypeRel (DataBaseCliente,ComboEmpresas,DataInicial,DataFinal,TypeRel) {\n                let data = JSON.stringify({\n                \"databasecliente\": DataBaseCliente,\n                \"comboempresas\": ComboEmpresas,\n                \"datainicial\": DataInicial,\n                \"datafinal\": DataFinal,\n                \"typerel\": TypeRel\n                });\n    \n                console.log('TypeRel: '+TypeRel +' DataInicial: '+DataInicial+' DataInicial: '+DataFinal)\n    \n                let config = {\n                method: 'post',\n                maxBodyLength: Infinity,\n                url:  store.ulrprincipal+'/evento/report',\n                headers: { \n                    'Content-Type': 'application/json', \n                    'Authorization': 'Basic dGVzdHNlcnZlcjp0ZXN0c2VydmVy'\n                },\n                data : data\n                };\n    \n                await axios.request(config)\n                .then((response) => {   \n                    if(TypeRel == 1){ \n                        store.relLoja = response.data.dados \n                    }                \n                    if(store.detectar_mobile()){\n                        window.scrollTo(0, 300);\n                        console.log('window.scrollTo')\n                    }\n                    store.Progress = false\n                    return response  \n                \n                })\n                .catch((error) => {\n                console.log(error);\n                store.Progress = false\n                });\n    \n             \n        } \n     \n    \n        function dataFormatada(d){ \n        var data =  new Date(d),\n            dia  = data.getDate().toString(),\n            diaF = (dia.length == 1) ? '0'+dia : dia,\n            mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n            mesF = (mes.length == 1) ? '0'+mes : mes,\n            anoF = data.getFullYear();\n        return anoF+\"-\"+mesF+\"-\"+diaF;\n        }\n      \n    \n    \n        \n        function somaValor(array) { \n            if(array) {\n                var arr =  array     \n            var sum = 0; \n            for(var i =0;i<arr.length;i++){ \n              sum+=arr[i]; \n            }   \n            }\n       \n            return (sum)\n          }\n    \n          function formataDinheiro(item) {\n             let venda = item;\n             if (!!venda && venda.toString().includes(\",\")) {\n               venda = venda.toString().replace(\",\", \".\");\n             }\n             return parseFloat(venda)\n               .toFixed(2)\n               .replace(\".\", \",\")\n               .replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n        }\n    \n     \n      \n        //Simple Bar\n       \n           //Simple Bar\n           const options_5 = computed(() => {\n            return {\n                chart:      { toolbar: { show: false }, zoom: { enabled: false }, }, \n                dataLabels: { enabled: false }, stroke: { curve: 'straight' },\n                title:      {  align: 'left', style: { fontWeight: 'normal' } },\n                grid:       { row: { colors: ['#f1f2f3', 'transparent'], opacity: 0.5 } },\n                xaxis:      { categories: store.relVendedores.map(x => x.loginfuncionario)  },\n            };\n        });\n          //Simple Bar\n        \n    \n        //unique visitors\n       \n        const unique_visitor_options = computed(() => {\n            \n            return {\n                chart: { height: 350,      type: 'bar'},\n                dataLabels: { enabled: !store.detectar_mobile(), formatter: function (val) {return \"R$ \" +formataDinheiro(val) },\n                  offsetY: -20,\n                  style: {\n                    fontSize: '11px',\n                    colors: [\"#888EA8\"]\n                  }              \n                },\n                 \n                colors: ['#5c1ac3'],\n                \n               \n    \n                plotOptions: {\n                  bar: {\n                    columnWidth: '90%',\n                    borderRadius: 0,\n                    dataLabels: {\n                      position: 'top', // top, center, bottom\n                    },\n                  }\n                },\n                legend: { position: 'bottom', horizontalAlign: 'center', fontSize: '14px', markers: { width: 12, height: 12 }, itemMargin: { horizontal: 7, vertical: 8 } },\n                grid: { borderColor:  '#e0e6ed' },\n                xaxis: {\n                    categories: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],\n                    axisBorder: { show: true, color:   '#e0e6ed' },\n                    \n                },\n                yaxis: {\n                    tickAmount: 6,\n                },\n                fill: {\n                    type: 'gradient',\n                    gradient: { shade:  'light', type: 'vertical', shadeIntensity: 0.3, inverseColors: false, opacityFrom: 1, opacityTo: 0.8, stops: [0, 100] },\n                },\n                tooltip: {\n                    theme:  'light',\n                    y: {\n                        formatter: function (val) {\n                            return val;\n                        },\n                    },\n                },\n            };\n        });\n    \n    \n    // vendas por empresa\n     \n     \n    const chartOptions = computed(() => {\n    \n        return {\n            chart: {\n                  height: 350,\n                  type: 'bar',\n                  events: {\n                    click: function(chart, w, e) {\n                      // console.log(chart, w, e)\n                    }\n                  }\n                },\n                colors: ['#5c1ac3', '#ffbb44','#A52A2A','#5F9EA0','#8B008B','#483D8B','#2F4F4F','#DCDCDC'],\n                plotOptions: {\n                  bar: {\n                    columnWidth: '80%',\n                    distributed: true,\n                  }\n                },\n                \n                dataLabels: { enabled: !store.detectar_mobile(), formatter: function (val) {return \"R$ \" +formataDinheiro(val) },\n                offsetY: -20,\n                style: {fontSize: '11px',colors: [\"#888EA8\"]\n                  } },\n                legend: {\n                  show: false\n                }, \n                plotOptions: { \n                  bar: {\n                    columnWidth: '80%',\n                    distributed: true,\n                    borderRadius: 0,\n                    dataLabels: {\n                      position: 'top', // top, center, bottom\n                    },\n                  }\n                  \n                },\n                \n                xaxis:      { categories: store.relLoja.map(x => x.identificacaointegracao) }\n        }\n                 \n              })\n    \n     //Statistics\n     const total_visit_series = ref([{ data: [21, 9, 36, 12, 44, 25, 59, 41, 66, 25] }]);\n        const total_visit_options = computed(() => {\n         \n            return {\n                chart: { sparkline: { enabled: true }, dropShadow: { enabled: true, top: 3, left: 1, blur: 3, color: '#009688', opacity: 0.7 } },\n                stroke: { curve: 'smooth', width: 2 },\n                markers: { size: 0 },\n                colors: ['#009688'],\n                grid: { padding: { top: 0, bottom: 0, left: 0 } },\n                tooltip: {\n                    theme:   'light',\n                    x: { show: false },\n                    y: {\n                        title: {\n                            formatter: function formatter() {\n                                return '';\n                            },\n                        },\n                    },\n                },\n                responsive: [{ breakPoint: 576, options: { chart: { height: 95 }, grid: { padding: { top: 45, bottom: 0, left: 0 } } } }],\n            };\n        });   \n        \n        const paid_visit_series = ref([{ data: [22, 19, 30, 47, 32, 44, 34, 55, 41, 69] }]);\n        const paid_visit_options = computed(() => {\n             \n            return {\n                chart: { sparkline: { enabled: true }, dropShadow: { enabled: true, top: 1, left: 1, blur: 2, color: '#e2a03f', opacity: 0.7 } },\n                stroke: { curve: 'smooth', width: 2 },\n                markers: { size: 0 },\n                colors: ['#e2a03f'],\n                grid: { padding: { top: 0, bottom: 0, left: 0 } },\n                tooltip: {\n                    theme:  'light',\n                    x: { show: false },\n                    y: {\n                        title: {\n                            formatter: function formatter() {\n                                return '';\n                            },\n                        },\n                    },\n                },\n                responsive: [{ breakPoint: 576, options: { chart: { height: 95 }, grid: { padding: { top: 35, bottom: 0, left: 0 } } } }],\n            };\n        });\n    \n    \n      \n    \n    const options_7 = computed(() => {\n         \n         return {\n            chart: { toolbar: { show: false } },\n            colors: ['#2a37ff','#ffa500','#ff2717'],\n            labels: ['Pagas','A Vencer', 'Vencidas'],\n            responsive: [{ breakpoint: 480, options: { chart: { width: 200 }, legend: { position: 'bottom' } } }]\n         };\n     });   \n    \n        \n    \n    \n    </script>\n    \n    <style>    \n    .filtrosWeb { \n     min-height: 43px;        \n    }\n    .filtrosMobile { \n     margin-top: -30px;    \n     min-height:  43px;    \n    }\n    .filtrosWebButton { \n     min-height: 43px;   \n     margin-top: 23px;       \n    }\n    .filtrosMobileButton { \n     margin-top: -20px;    \n     min-height:  43px;    \n    }\n    </style>\n    \n    "]},"metadata":{},"sourceType":"module"}