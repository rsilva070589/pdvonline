{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport '@/assets/sass/widgets/widgets.scss';\nimport { onMounted, ref, computed } from 'vue';\nimport { indexStore, useUserStore } from '../../store/indexStore';\nimport { useMeta } from '@/composables/use-meta';\nimport axios from 'axios';\nimport { useRouter } from \"vue-router\";\nimport Progress from '@/components/Progress.vue';\nexport default {\n  __name: 'Dre',\n\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n\n    useMeta({\n      title: 'Relatorios'\n    });\n    const storeLogin = useUserStore();\n    const router = useRouter();\n    const store = indexStore();\n    login();\n    store.carregando = false;\n    store.dadosRel = [];\n\n    function login() {\n      switch (storeLogin.empresas?.sucess) {\n        case true:\n          console.log('usuario logado');\n          break;\n\n        case 'true':\n          console.log('usuario logado');\n          break;\n\n        default:\n          console.log('precisa fazer login');\n          router.push('/auth/login');\n      }\n    }\n\n    function logout() {\n      storeLogin.empresas.sucess = false;\n      console.log(storeLogin.empresas.sucess);\n      router.push('/auth/login');\n    }\n\n    onMounted(() => {\n      store.indexVendas = 0;\n\n      async function getTypeRel(DataBaseCliente, ComboEmpresas, DataInicial, DataFinal, TypeRel) {\n        let data = JSON.stringify({\n          \"databasecliente\": DataBaseCliente,\n          \"comboempresas\": ComboEmpresas,\n          \"datainicial\": DataInicial,\n          \"datafinal\": DataFinal,\n          \"typerel\": TypeRel\n        });\n        console.log('TypeRel: ' + TypeRel + ' DataInicial: ' + DataInicial + ' DataInicial: ' + DataFinal);\n        let config = {\n          method: 'post',\n          maxBodyLength: Infinity,\n          url: store.ulrprincipal + '/evento/report',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Basic dGVzdHNlcnZlcjp0ZXN0c2VydmVy'\n          },\n          data: data\n        };\n        await axios.request(config).then(response => {\n          if (TypeRel == 8) {\n            store.relLoja = response.data.dados;\n            store.dadosRel = [{\n              TIPO: 'Total Vendas Bruta',\n              DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.vendabruta)\n            }, {\n              TIPO: 'Descontos',\n              DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.descontos)\n            }, {\n              TIPO: 'Comissões (CS)',\n              DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.comissoes)\n            }, {\n              TIPO: 'Total Vendas Liquida',\n              DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.vendaliquida)\n            }, {\n              TIPO: 'CRM (Custo Mercadoria Vendida)',\n              DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.customercadoriavendida)\n            }, {\n              TIPO: 'Taxas Cartão / Pgto',\n              DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.taxacartao)\n            }, {\n              TIPO: 'Lucro Bruto Vendas',\n              DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.lucrobrutosobrevenda)\n            }, {\n              TIPO: 'Despesas do Periodo (DP)',\n              DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.despesaperiodo)\n            }];\n            console.log(store.dadosRel);\n          }\n\n          if (store.detectar_mobile()) {\n            window.scrollTo(0, 300);\n            console.log('window.scrollTo');\n          }\n\n          store.Progress = false;\n          return response;\n        }).catch(error => {\n          console.log(error);\n          store.Progress = false;\n        });\n      }\n\n      store.filtro = {\n        empresa: 'CENTRAL',\n        dataInicial: dataFormatada('2023-09-01'),\n        dataFinal: dataFormatada(new Date())\n      };\n\n      function filtros() {\n        if (storeLogin.empresas?.sucess) {\n          store.relLoja = [];\n          store.relVendedores = [];\n          store.relAnual = [];\n          store.relContas = [];\n          store.Progress = true;\n          getTypeRel(storeLogin.empresas.databasecliente, store.filtro.empresa, store.filtro.dataInicial, store.filtro.dataFinal, 8);\n        }\n      }\n\n      filtros();\n    });\n\n    function dataFormatada(d) {\n      var data = new Date(d),\n          dia = data.getDate().toString(),\n          diaF = dia.length == 1 ? '0' + dia : dia,\n          mes = (data.getMonth() + 1).toString(),\n          //+1 pois no getMonth Janeiro começa com zero.\n      mesF = mes.length == 1 ? '0' + mes : mes,\n          anoF = data.getFullYear();\n      return anoF + \"-\" + mesF + \"-\" + diaF;\n    }\n\n    function somaValor(array) {\n      if (array) {\n        var arr = array;\n        var sum = 0;\n\n        for (var i = 0; i < arr.length; i++) {\n          sum += arr[i];\n        }\n      }\n\n      return sum;\n    }\n\n    function formataDinheiro(item) {\n      let venda = item;\n\n      if (!!venda && venda.toString().includes(\",\")) {\n        venda = venda.toString().replace(\",\", \".\");\n      }\n\n      return parseFloat(venda).toFixed(2).replace(\".\", \",\").replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n    }\n\n    const proximo = () => {\n      if (store.indexVendas < store.itemSelect.imagens.length - 1) {\n        store.indexVendas = store.indexVendas + 1;\n        console.log('index Empresa: ' + store.indexVendas);\n      }\n    };\n\n    const anterior = () => {\n      if (store.indexImagem > 0) {\n        store.indexVendas = store.indexVendas - 1;\n        console.log('index Empresa: ' + store.indexVendas);\n      }\n    };\n\n    const __returned__ = {\n      storeLogin,\n      router,\n      store,\n      login,\n      logout,\n      dataFormatada,\n      somaValor,\n      formataDinheiro,\n      proximo,\n      anterior,\n      onMounted,\n      ref,\n      computed,\n\n      get indexStore() {\n        return indexStore;\n      },\n\n      get useUserStore() {\n        return useUserStore;\n      },\n\n      get useMeta() {\n        return useMeta;\n      },\n\n      get axios() {\n        return axios;\n      },\n\n      get useRouter() {\n        return useRouter;\n      },\n\n      Progress\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["onMounted","ref","computed","indexStore","useUserStore","useMeta","axios","useRouter","Progress","title","storeLogin","router","store","login","carregando","dadosRel","empresas","sucess","console","log","push","logout","indexVendas","getTypeRel","DataBaseCliente","ComboEmpresas","DataInicial","DataFinal","TypeRel","data","JSON","stringify","config","method","maxBodyLength","Infinity","url","ulrprincipal","headers","request","then","response","relLoja","dados","TIPO","DADOS","formataDinheiro","vendabruta","descontos","comissoes","vendaliquida","customercadoriavendida","taxacartao","lucrobrutosobrevenda","despesaperiodo","detectar_mobile","window","scrollTo","catch","error","filtro","empresa","dataInicial","dataFormatada","dataFinal","Date","filtros","relVendedores","relAnual","relContas","databasecliente","d","dia","getDate","toString","diaF","length","mes","getMonth","mesF","anoF","getFullYear","somaValor","array","arr","sum","i","item","venda","includes","replace","parseFloat","toFixed","proximo","itemSelect","imagens","anterior","indexImagem"],"sources":["/home/renato/projetos/pdvsmart/src/views/relatorios/Dre.vue"],"sourcesContent":["<template> \n \n \n    <div v-if=\"storeLogin.empresas?.sucess == 'true'\">  \n        <div class=\"layout-px-spacing dash_2\">\n            <teleport to=\"#breadcrumb\">\n                <ul class=\"navbar-nav flex-row\">\n                    <li>\n                        <div class=\"page-header\">\n                            <nav class=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                                <ol class=\"breadcrumb\">\n                                    <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Relatorios</a></li>\n                                    <li class=\"breadcrumb-item active\" aria-current=\"page\"><span>Dre</span></li>\n                                </ol>\n                            </nav>\n                        </div>\n                    </li>\n                </ul>\n            </teleport> \n            \n      <div  v-if=\"storeLogin.empresas?.sucess == 'true'\"\n            class=\"row align-items-center form-group \" to=\"#breadcrumb\" >\n            <div class=\"form-group col-md-2\">\n                <label class=\"col-form-label\">Empresa</label>\n                \n                <select   class=\"mb-4 form-control flatpickr active w-100 form-select\"   \n                        v-model=\"store.filtro.empresa\"            \n                        style=\" margin-top: -15px;\"\n                        >\n                        <option \n                        v-for=\"emp, indexEmp in storeLogin.empresas.dadosempresa\"\n                        :key=\"indexEmp\"\n                        :value=\"emp.identificacaointegracao\">{{emp.identificacaointegracao}}\n                        </option>               \n                </select>\n            </div> \n    \n            <div class=\"form-group col-md-2\"\n             v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobile' : 'filtrosWeb'\"\n            \n            >\n                <label class=\"col-form-label\"\n            \n                >Data Inicial</label>              \n                <input type=\"date\" v-model=\"store.filtro.dataInicial\"  data-date-format=\"DD MM YYYY\"\n                class=\"mb-4 form-control flatpickr active w-100\" \n                v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobile' : 'filtrosWeb'\"\n                style=\" margin-top: -15px;\"\n            \n                >\n            </div> \n    \n            <div class=\"form-group col-md-2\"\n                v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobile' : 'filtrosWeb'\"\n            \n            >\n                <label class=\"col-form-label\"\n             \n                >Data Final</label>            \n                <input \n                    type=\"date\" data-date-format=\"DD MM YYYY\" v-model=\"store.filtro.dataFinal\"  \n                    class=\"mb-4 form-control flatpickr active w-100\"\n                    v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobile' : 'filtrosWeb'\"\n                    style=\" margin-top: -15px;\"\n                    > \n                    \n            </div> \n    \n            <div class=\"form-group col-md-2 align-items-center \">    \n               <div class=\"btn btn-primary mb-4 form-control active w-300\" \n                    v-bind:class=\"(store.detectar_mobile()) ? 'filtrosMobileButton' : 'filtrosWebButton'\"                \n                    @click=\"filtros()\">\n                   ATUALIZAR\n                </div>\n            </div> \n     \n      </div>\n    \n    <Progress v-if=\"store.Progress && storeLogin.empresas?.sucess == true\"/> \n    \n      <div v-if=\"   !store.relVendedores?.length > 0 \n                 && !store.Progress\n                 && !store.relLoja?.length > 0 \n                 && !store.relAnual?.length > 0 \n                 && !store.relContas?.length > 0 \n                 && !store.relLoja?.length > 0   \n                 \"\n        style=\"text-align: center; font-size: 30px;\"\n        >\n        Sem dados para exibir neste período...\n      </div>\n\n      <div >\n        <div v-if=\"store.relLoja?.length > 0\" style=\"color: blue; font-size: 20px; text-align: center\">\n            {{ store.relLoja[store.indexVendas]?.identificacaointegracao }} \n        </div>\n        <div v-if=\"!store.editando\" style=\"display: flex; justify-content: center;\">\n \n\n        <div class=\"table-light table-responsive\" style=\"width: 500px; background-color: #ffffff;\">\n            <table role=\"table\" aria-busy=\"false\" aria-colcount=\"5\" class=\"table b-table table-hover\" id=\"__BVID__310\">\n                <thead role=\"rowgroup\" class=\"\">\n                    <tr role=\"row\" class=\"\">\n                        <th role=\"columnheader\" scope=\"col\" aria-colindex=\"1\" class=\"\"><div></div></th>\n                        <th role=\"columnheader\" scope=\"col\" aria-colindex=\"2\" class=\"\"><div></div></th>                       \n                    </tr>\n                </thead>\n                <tbody v-for=\"(item, i) in store.dadosRel\" :key=\"item.name\" role=\"rowgroup\">\n                    <tr role=\"row\" class=\"\">\n                        <td aria-colindex=\"1\" role=\"cell\" class=\"\">{{ item.TIPO }}</td>\n                        <td aria-colindex=\"2\" role=\"cell\" style=\"text-align: end;\">{{ item.DADOS }}</td> \n                    </tr>\n                </tbody>\n            </table>\n        </div>\n \n\n      </div>\n\n      <div style=\"padding: 10px; font-size: 20px;   display: flex; justify-content: center;\">\n            <div v-for=\"(item, i) in store.relLoja\" :key=\"item.DADOS\">\n                <div style=\"background-color: #ffffff; padding: 10px;\">\n                    {{ i+1 }}\n                </div>\n            </div>\n        </div>\n\n    </div>\n    \n            \n        </div>\n    </div>    \n    </template>\n     \n    <script setup>\n        import '@/assets/sass/widgets/widgets.scss';\n        import { onMounted, ref, computed } from 'vue';  \n        import { indexStore, useUserStore } from '../../store/indexStore'  \n        import { useMeta } from '@/composables/use-meta';\n        import   axios from 'axios';\n        import { useRouter } from \"vue-router\"; \n        import Progress from '@/components/Progress.vue';\n        \n        useMeta({ title: 'Relatorios' });\n        const storeLogin = useUserStore()  \n        const router = useRouter() \n        const store = indexStore(); \n        login()\n          \n        store.carregando = false \n        store.dadosRel = []\n    \n    \n        function login (){\n    \n            switch (storeLogin.empresas?.sucess) {\n            case true:\n                console.log('usuario logado')  \n                break;\n            case 'true':\n                console.log('usuario logado')  \n                 break; \n            default:\n                console.log('precisa fazer login')\n                router.push('/auth/login') \n            }\n             \n        }\n    \n      function logout(){ \n        storeLogin.empresas.sucess =false\n        console.log( storeLogin.empresas.sucess ) \n        router.push('/auth/login') \n      }\n    \n       \n\n  onMounted(() => {\n    store.indexVendas = 0 \n    async function getTypeRel (DataBaseCliente,ComboEmpresas,DataInicial,DataFinal,TypeRel) {\n                let data = JSON.stringify({\n                \"databasecliente\": DataBaseCliente,\n                \"comboempresas\": ComboEmpresas,\n                \"datainicial\": DataInicial,\n                \"datafinal\": DataFinal,\n                \"typerel\": TypeRel\n                });\n    \n                console.log('TypeRel: '+TypeRel +' DataInicial: '+DataInicial+' DataInicial: '+DataFinal)\n    \n                let config = {\n                method: 'post',\n                maxBodyLength: Infinity,\n                url:  store.ulrprincipal+'/evento/report',\n                headers: { \n                    'Content-Type': 'application/json', \n                    'Authorization': 'Basic dGVzdHNlcnZlcjp0ZXN0c2VydmVy'\n                },\n                data : data\n                };\n    \n                await axios.request(config)\n                .then((response) => {   \n                    if(TypeRel == 8){ \n                        store.relLoja = response.data.dados \n\n                        store.dadosRel =   [    \n                            { TIPO: 'Total Vendas Bruta',       DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.vendabruta) },\n                            { TIPO: 'Descontos',                DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.descontos) },\n                            { TIPO: 'Comissões (CS)',           DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.comissoes) },\n                            { TIPO: 'Total Vendas Liquida',     DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.vendaliquida) },\n                            { TIPO: 'CRM (Custo Mercadoria Vendida)', DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.customercadoriavendida) },\n                            { TIPO: 'Taxas Cartão / Pgto',      DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.taxacartao) },\n                            { TIPO: 'Lucro Bruto Vendas',       DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.lucrobrutosobrevenda) },\n                            { TIPO: 'Despesas do Periodo (DP)', DADOS: formataDinheiro(store.relLoja[store.indexVendas]?.despesaperiodo) },\n                        ]\n\n                        console.log(store.dadosRel)\n                    }                \n                    if(store.detectar_mobile()){\n                        window.scrollTo(0, 300);\n                        console.log('window.scrollTo')\n                    }\n                    store.Progress = false\n                    return response  \n                \n                })\n                .catch((error) => {\n                console.log(error);\n                store.Progress = false\n                });  \n        } \n\n\n        store.filtro= { \n            empresa: 'CENTRAL',\n            dataInicial:  dataFormatada('2023-09-01'),\n            dataFinal:    dataFormatada(new Date())\n        }\n    \n        function filtros(){\n            if(storeLogin.empresas?.sucess){\n                store.relLoja = []\n                store.relVendedores = []\n                store.relAnual = []\n                store.relContas = []\n                store.Progress = true        \n            getTypeRel(storeLogin.empresas.databasecliente,store.filtro.empresa,store.filtro.dataInicial,store.filtro.dataFinal,8)\n            } \n        }\n\n        filtros()\n        \n  \n  })\n      \n \n     \n    \n        function dataFormatada(d){ \n        var data =  new Date(d),\n            dia  = data.getDate().toString(),\n            diaF = (dia.length == 1) ? '0'+dia : dia,\n            mes  = (data.getMonth()+1).toString(), //+1 pois no getMonth Janeiro começa com zero.\n            mesF = (mes.length == 1) ? '0'+mes : mes,\n            anoF = data.getFullYear();\n        return anoF+\"-\"+mesF+\"-\"+diaF;\n        }\n      \n    \n    \n        \n        function somaValor(array) { \n            if(array) {\n                var arr =  array     \n            var sum = 0; \n            for(var i =0;i<arr.length;i++){ \n              sum+=arr[i]; \n            }   \n            }\n       \n            return (sum)\n          }\n    \n          function formataDinheiro(item) {\n             let venda = item;\n             if (!!venda && venda.toString().includes(\",\")) {\n               venda = venda.toString().replace(\",\", \".\");\n             }\n             return parseFloat(venda)\n               .toFixed(2)\n               .replace(\".\", \",\")\n               .replace(/(\\d)(?=(\\d{3})+\\,)/g, \"$1.\");\n        }\n\nconst proximo = ()=> {   \n   if (store.indexVendas < store.itemSelect.imagens.length -1) {\n     store.indexVendas = store.indexVendas +1\n     console.log('index Empresa: '+store.indexVendas)\n   }   \n }\n\n const anterior = ()=> {  \n  if (store.indexImagem > 0) {\n    store.indexVendas = store.indexVendas -1\n    console.log('index Empresa: '+store.indexVendas)\n  }  \n}\n     \n    \n    </script>\n    \n    <style>    \n    .filtrosWeb { \n     min-height: 43px;        \n    }\n    .filtrosMobile { \n     margin-top: -30px;    \n     min-height:  43px;    \n    }\n    .filtrosWebButton { \n     min-height: 43px;   \n     margin-top: 23px;       \n    }\n    .filtrosMobileButton { \n     margin-top: -20px;    \n     min-height:  43px;    \n    }\n    </style>\n    \n    "]},"metadata":{},"sourceType":"module"}